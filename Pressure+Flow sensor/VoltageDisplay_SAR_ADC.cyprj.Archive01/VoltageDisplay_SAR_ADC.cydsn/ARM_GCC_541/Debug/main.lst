ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.DELAY,"ax",%progbits
  20              		.align	2
  21              		.global	DELAY
  22              		.thumb
  23              		.thumb_func
  24              		.type	DELAY, %function
  25              	DELAY:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** /******************************************************************************
   2:main.c        **** * File Name: Main.c
   3:main.c        **** *
   4:main.c        **** * Version 1.1
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** * This file contains the main function for the voltage Display test.
   8:main.c        **** *
   9:main.c        **** * Note:
  10:main.c        **** *
  11:main.c        **** * Code tested with:
  12:main.c        **** * PSoC Creator: 3.0
  13:main.c        **** * Device Tested With: CY8C5868AXI-LP035
  14:main.c        **** * Compiler    : ARMGCC 4.4.1, ARM RVDS Generic, ARM MDK Generic
  15:main.c        **** *
  16:main.c        **** ********************************************************************************
  17:main.c        **** * Copyright (2013), Cypress Semiconductor Corporation. All Rights Reserved.
  18:main.c        **** ********************************************************************************
  19:main.c        **** * This software is owned by Cypress Semiconductor Corporation (Cypress)
  20:main.c        **** * and is protected by and subject to worldwide patent protection (United
  21:main.c        **** * States and foreign), United States copyright laws and international treaty
  22:main.c        **** * provisions. Cypress hereby grants to licensee a personal, non-exclusive,
  23:main.c        **** * non-transferable license to copy, use, modify, create derivative works of,
  24:main.c        **** * and compile the Cypress Source Code and derivative works for the sole
  25:main.c        **** * purpose of creating custom software in support of licensee product to be
  26:main.c        **** * used only in conjunction with a Cypress integrated circuit as specified in
  27:main.c        **** * the applicable agreement. Any reproduction, modification, translation,
  28:main.c        **** * compilation, or representation of this software except as specified above 
  29:main.c        **** * is prohibited without the express written permission of Cypress.
  30:main.c        **** *
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 2


  31:main.c        **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH 
  32:main.c        **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  33:main.c        **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  34:main.c        **** * Cypress reserves the right to make changes without further notice to the 
  35:main.c        **** * materials described herein. Cypress does not assume any liability arising out 
  36:main.c        **** * of the application or use of any product or circuit described herein. Cypress 
  37:main.c        **** * does not authorize its products for use as critical components in life-support 
  38:main.c        **** * systems where a malfunction or failure may reasonably be expected to result in 
  39:main.c        **** * significant injury to the user. The inclusion of Cypress' product in a life-
  40:main.c        **** * support systems application implies that the manufacturer assumes all risk of 
  41:main.c        **** * such use and in doing so indemnifies Cypress against all charges. 
  42:main.c        **** *
  43:main.c        **** * Use of this Software may be limited by and subject to the applicable Cypress
  44:main.c        **** * software license agreement. 
  45:main.c        **** *******************************************************************************/
  46:main.c        **** 
  47:main.c        **** /******************************************************************************
  48:main.c        **** *                           THEORY OF OPERATION
  49:main.c        **** * This project demonstrates how ADC is used to read the input voltage at 
  50:main.c        **** * it's input and display it on the LCD.
  51:main.c        **** * 
  52:main.c        **** * The Potentiometer is connected to the input of the SAR ADC. ADC is 
  53:main.c        **** * configured with 12 bit of resolution to measure the input voltage with 
  54:main.c        **** * higher accuracy. ADC count is converted back to micro volts and 8 samples are 
  55:main.c        **** * collected. After that the average of 8 samples is calculated and displayed
  56:main.c        **** * on the LCD. 
  57:main.c        **** *
  58:main.c        **** * Hardware connection on the Kit
  59:main.c        **** * Potentiometer - PORT 6[5] 
  60:main.c        **** * LCD - PORT 2[0..6]
  61:main.c        **** *******************************************************************************/
  62:main.c        **** #include <device.h>
  63:main.c        **** #include "stdio.h"
  64:main.c        **** 
  65:main.c        **** #define MAX_SAMPLE                  8
  66:main.c        **** 
  67:main.c        **** #include <math.h>
  68:main.c        **** #define DELAY_TIME 60
  69:main.c        **** #define TRUE 1
  70:main.c        **** #define FALSE 0
  71:main.c        **** #define uchar unsigned char
  72:main.c        **** #define uint unsigned int
  73:main.c        **** 
  74:main.c        **** #include "pthread.h"
  75:main.c        **** void DELAY(uint t)   //ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½
  76:main.c        **** {
  28              		.loc 1 76 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 3


  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
  77:main.c        ****     while (t != 0)
  41              		.loc 1 77 0
  42 0008 02E0     		b	.L2
  43              	.L3:
  78:main.c        ****         t--;
  44              		.loc 1 78 0
  45 000a 7B68     		ldr	r3, [r7, #4]
  46 000c 013B     		subs	r3, r3, #1
  47 000e 7B60     		str	r3, [r7, #4]
  48              	.L2:
  77:main.c        ****     while (t != 0)
  49              		.loc 1 77 0
  50 0010 7B68     		ldr	r3, [r7, #4]
  51 0012 002B     		cmp	r3, #0
  52 0014 F9D1     		bne	.L3
  79:main.c        **** }
  53              		.loc 1 79 0
  54 0016 00BF     		nop
  55 0018 0C37     		adds	r7, r7, #12
  56              		.cfi_def_cfa_offset 4
  57 001a BD46     		mov	sp, r7
  58              		.cfi_def_cfa_register 13
  59              		@ sp needed
  60 001c 80BC     		pop	{r7}
  61              		.cfi_restore 7
  62              		.cfi_def_cfa_offset 0
  63 001e 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE64:
  66              		.size	DELAY, .-DELAY
  67              		.section	.text.I2C_Start,"ax",%progbits
  68              		.align	2
  69              		.global	I2C_Start
  70              		.thumb
  71              		.thumb_func
  72              		.type	I2C_Start, %function
  73              	I2C_Start:
  74              	.LFB65:
  80:main.c        **** void I2C_Start(void)  //ï¿½ï¿½ï¿½ï¿½I2Cï¿½ï¿½ï¿½ß£ï¿½ï¿½ï¿½SCLÎªï¿½ßµï¿½Æ½Ê±Ê¹SDAï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï
  81:main.c        **** {
  75              		.loc 1 81 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 80B5     		push	{r7, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 00AF     		add	r7, sp, #0
  84              		.cfi_def_cfa_register 7
  82:main.c        **** 
  83:main.c        ****     mySDA_Write(1);
  85              		.loc 1 83 0
  86 0004 0120     		movs	r0, #1
  87 0006 FFF7FEFF 		bl	mySDA_Write
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 4


  84:main.c        ****     mySCL_Write(1);
  88              		.loc 1 84 0
  89 000a 0120     		movs	r0, #1
  90 000c FFF7FEFF 		bl	mySCL_Write
  85:main.c        ****     DELAY(DELAY_TIME);
  91              		.loc 1 85 0
  92 0010 3C20     		movs	r0, #60
  93 0012 FFF7FEFF 		bl	DELAY
  86:main.c        ****     mySDA_Write(0);
  94              		.loc 1 86 0
  95 0016 0020     		movs	r0, #0
  96 0018 FFF7FEFF 		bl	mySDA_Write
  87:main.c        ****     DELAY(DELAY_TIME);
  97              		.loc 1 87 0
  98 001c 3C20     		movs	r0, #60
  99 001e FFF7FEFF 		bl	DELAY
  88:main.c        ****     mySCL_Write(0);
 100              		.loc 1 88 0
 101 0022 0020     		movs	r0, #0
 102 0024 FFF7FEFF 		bl	mySCL_Write
  89:main.c        ****     DELAY(DELAY_TIME);
 103              		.loc 1 89 0
 104 0028 3C20     		movs	r0, #60
 105 002a FFF7FEFF 		bl	DELAY
  90:main.c        **** }
 106              		.loc 1 90 0
 107 002e 00BF     		nop
 108 0030 80BD     		pop	{r7, pc}
 109              		.cfi_endproc
 110              	.LFE65:
 111              		.size	I2C_Start, .-I2C_Start
 112 0032 00BF     		.section	.text.I2C_Stop,"ax",%progbits
 113              		.align	2
 114              		.global	I2C_Stop
 115              		.thumb
 116              		.thumb_func
 117              		.type	I2C_Stop, %function
 118              	I2C_Stop:
 119              	.LFB66:
  91:main.c        **** 
  92:main.c        **** void I2C_Stop(void)  //ï¿½ï¿½Ö¹I2Cï¿½ï¿½ï¿½ß£ï¿½ï¿½ï¿½SCLÎªï¿½ßµï¿½Æ½Ê±Ê¹SDAï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½
  93:main.c        **** {
 120              		.loc 1 93 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 00AF     		add	r7, sp, #0
 129              		.cfi_def_cfa_register 7
  94:main.c        ****     mySDA_Write(0);
 130              		.loc 1 94 0
 131 0004 0020     		movs	r0, #0
 132 0006 FFF7FEFF 		bl	mySDA_Write
  95:main.c        ****     mySCL_Write(1);
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 5


 133              		.loc 1 95 0
 134 000a 0120     		movs	r0, #1
 135 000c FFF7FEFF 		bl	mySCL_Write
  96:main.c        ****     DELAY(DELAY_TIME);
 136              		.loc 1 96 0
 137 0010 3C20     		movs	r0, #60
 138 0012 FFF7FEFF 		bl	DELAY
  97:main.c        ****     mySDA_Write(1);
 139              		.loc 1 97 0
 140 0016 0120     		movs	r0, #1
 141 0018 FFF7FEFF 		bl	mySDA_Write
  98:main.c        ****     DELAY(DELAY_TIME);
 142              		.loc 1 98 0
 143 001c 3C20     		movs	r0, #60
 144 001e FFF7FEFF 		bl	DELAY
  99:main.c        ****     mySCL_Write(0);
 145              		.loc 1 99 0
 146 0022 0020     		movs	r0, #0
 147 0024 FFF7FEFF 		bl	mySCL_Write
 100:main.c        ****     DELAY(DELAY_TIME);
 148              		.loc 1 100 0
 149 0028 3C20     		movs	r0, #60
 150 002a FFF7FEFF 		bl	DELAY
 101:main.c        **** }
 151              		.loc 1 101 0
 152 002e 00BF     		nop
 153 0030 80BD     		pop	{r7, pc}
 154              		.cfi_endproc
 155              	.LFE66:
 156              		.size	I2C_Stop, .-I2C_Stop
 157 0032 00BF     		.section	.text.SEND_0,"ax",%progbits
 158              		.align	2
 159              		.global	SEND_0
 160              		.thumb
 161              		.thumb_func
 162              		.type	SEND_0, %function
 163              	SEND_0:
 164              	.LFB67:
 102:main.c        **** 
 103:main.c        **** void SEND_0(void)  //ï¿½ï¿½ï¿½ï¿½0
 104:main.c        **** {
 165              		.loc 1 104 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 1, uses_anonymous_args = 0
 169 0000 80B5     		push	{r7, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
 105:main.c        ****     mySDA_Write(0);
 175              		.loc 1 105 0
 176 0004 0020     		movs	r0, #0
 177 0006 FFF7FEFF 		bl	mySDA_Write
 106:main.c        ****     mySCL_Write(1);
 178              		.loc 1 106 0
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 6


 179 000a 0120     		movs	r0, #1
 180 000c FFF7FEFF 		bl	mySCL_Write
 107:main.c        ****     DELAY(DELAY_TIME);
 181              		.loc 1 107 0
 182 0010 3C20     		movs	r0, #60
 183 0012 FFF7FEFF 		bl	DELAY
 108:main.c        ****     mySCL_Write(0);
 184              		.loc 1 108 0
 185 0016 0020     		movs	r0, #0
 186 0018 FFF7FEFF 		bl	mySCL_Write
 109:main.c        ****     DELAY(DELAY_TIME);
 187              		.loc 1 109 0
 188 001c 3C20     		movs	r0, #60
 189 001e FFF7FEFF 		bl	DELAY
 110:main.c        **** }
 190              		.loc 1 110 0
 191 0022 00BF     		nop
 192 0024 80BD     		pop	{r7, pc}
 193              		.cfi_endproc
 194              	.LFE67:
 195              		.size	SEND_0, .-SEND_0
 196 0026 00BF     		.section	.text.SEND_1,"ax",%progbits
 197              		.align	2
 198              		.global	SEND_1
 199              		.thumb
 200              		.thumb_func
 201              		.type	SEND_1, %function
 202              	SEND_1:
 203              	.LFB68:
 111:main.c        **** 
 112:main.c        **** void SEND_1(void)   //ï¿½ï¿½ï¿½ï¿½1
 113:main.c        **** {
 204              		.loc 1 113 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 00AF     		add	r7, sp, #0
 213              		.cfi_def_cfa_register 7
 114:main.c        **** 
 115:main.c        ****     mySDA_Write(1);
 214              		.loc 1 115 0
 215 0004 0120     		movs	r0, #1
 216 0006 FFF7FEFF 		bl	mySDA_Write
 116:main.c        ****     mySCL_Write(1);
 217              		.loc 1 116 0
 218 000a 0120     		movs	r0, #1
 219 000c FFF7FEFF 		bl	mySCL_Write
 117:main.c        ****     DELAY(DELAY_TIME);
 220              		.loc 1 117 0
 221 0010 3C20     		movs	r0, #60
 222 0012 FFF7FEFF 		bl	DELAY
 118:main.c        ****     mySCL_Write(0);
 223              		.loc 1 118 0
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 7


 224 0016 0020     		movs	r0, #0
 225 0018 FFF7FEFF 		bl	mySCL_Write
 119:main.c        ****     DELAY(DELAY_TIME);
 226              		.loc 1 119 0
 227 001c 3C20     		movs	r0, #60
 228 001e FFF7FEFF 		bl	DELAY
 120:main.c        **** }
 229              		.loc 1 120 0
 230 0022 00BF     		nop
 231 0024 80BD     		pop	{r7, pc}
 232              		.cfi_endproc
 233              	.LFE68:
 234              		.size	SEND_1, .-SEND_1
 235 0026 00BF     		.section	.text.Check_Acknowledge,"ax",%progbits
 236              		.align	2
 237              		.global	Check_Acknowledge
 238              		.thumb
 239              		.thumb_func
 240              		.type	Check_Acknowledge, %function
 241              	Check_Acknowledge:
 242              	.LFB69:
 121:main.c        **** 
 122:main.c        **** int Check_Acknowledge(void)   //ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö½Úºï¿½ï¿½ï¿½ï¿½ï¿½è±¸ï¿½ï¿½Ó¦ï¿½ï¿½ï¿½Åºï¿½
 123:main.c        **** {
 243              		.loc 1 123 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 80B5     		push	{r7, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 82B0     		sub	sp, sp, #8
 252              		.cfi_def_cfa_offset 16
 253 0004 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 124:main.c        **** 
 125:main.c        ****     mySDA_Write(1);
 255              		.loc 1 125 0
 256 0006 0120     		movs	r0, #1
 257 0008 FFF7FEFF 		bl	mySDA_Write
 126:main.c        ****     mySCL_Write(1);
 258              		.loc 1 126 0
 259 000c 0120     		movs	r0, #1
 260 000e FFF7FEFF 		bl	mySCL_Write
 127:main.c        ****     DELAY(DELAY_TIME / 2);
 261              		.loc 1 127 0
 262 0012 1E20     		movs	r0, #30
 263 0014 FFF7FEFF 		bl	DELAY
 128:main.c        ****     uint8_t F0 = mySDA_Read();
 264              		.loc 1 128 0
 265 0018 FFF7FEFF 		bl	mySDA_Read
 266 001c 0346     		mov	r3, r0
 267 001e FB71     		strb	r3, [r7, #7]
 129:main.c        ****     DELAY(DELAY_TIME / 2);
 268              		.loc 1 129 0
 269 0020 1E20     		movs	r0, #30
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 8


 270 0022 FFF7FEFF 		bl	DELAY
 130:main.c        ****     mySCL_Write(0);
 271              		.loc 1 130 0
 272 0026 0020     		movs	r0, #0
 273 0028 FFF7FEFF 		bl	mySCL_Write
 131:main.c        ****     DELAY(DELAY_TIME);
 274              		.loc 1 131 0
 275 002c 3C20     		movs	r0, #60
 276 002e FFF7FEFF 		bl	DELAY
 132:main.c        ****     if (F0 == 1)
 277              		.loc 1 132 0
 278 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 279 0034 012B     		cmp	r3, #1
 280 0036 01D1     		bne	.L9
 133:main.c        ****         return FALSE;
 281              		.loc 1 133 0
 282 0038 0023     		movs	r3, #0
 283 003a 00E0     		b	.L10
 284              	.L9:
 134:main.c        ****     return TRUE;
 285              		.loc 1 134 0
 286 003c 0123     		movs	r3, #1
 287              	.L10:
 135:main.c        **** }
 288              		.loc 1 135 0
 289 003e 1846     		mov	r0, r3
 290 0040 0837     		adds	r7, r7, #8
 291              		.cfi_def_cfa_offset 8
 292 0042 BD46     		mov	sp, r7
 293              		.cfi_def_cfa_register 13
 294              		@ sp needed
 295 0044 80BD     		pop	{r7, pc}
 296              		.cfi_endproc
 297              	.LFE69:
 298              		.size	Check_Acknowledge, .-Check_Acknowledge
 299 0046 00BF     		.section	.text.WriteI2CByte,"ax",%progbits
 300              		.align	2
 301              		.global	WriteI2CByte
 302              		.thumb
 303              		.thumb_func
 304              		.type	WriteI2CByte, %function
 305              	WriteI2CByte:
 306              	.LFB70:
 136:main.c        **** 
 137:main.c        **** void WriteI2CByte(uchar b)    //ï¿½ï¿½I2Cï¿½ï¿½ï¿½ï¿½Ð´ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö½ï¿½
 138:main.c        **** {
 307              		.loc 1 138 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 16
 310              		@ frame_needed = 1, uses_anonymous_args = 0
 311 0000 80B5     		push	{r7, lr}
 312              		.cfi_def_cfa_offset 8
 313              		.cfi_offset 7, -8
 314              		.cfi_offset 14, -4
 315 0002 84B0     		sub	sp, sp, #16
 316              		.cfi_def_cfa_offset 24
 317 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 9


 318              		.cfi_def_cfa_register 7
 319 0006 0346     		mov	r3, r0
 320 0008 FB71     		strb	r3, [r7, #7]
 139:main.c        **** 
 140:main.c        ****     char i;
 141:main.c        ****     for (i = 0; i < 8; i++)
 321              		.loc 1 141 0
 322 000a 0023     		movs	r3, #0
 323 000c FB73     		strb	r3, [r7, #15]
 324 000e 0FE0     		b	.L12
 325              	.L15:
 142:main.c        ****         if ((b << i) & 0x80)
 326              		.loc 1 142 0
 327 0010 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 328 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 329 0014 02FA03F3 		lsl	r3, r2, r3
 330 0018 03F08003 		and	r3, r3, #128
 331 001c 002B     		cmp	r3, #0
 332 001e 02D0     		beq	.L13
 143:main.c        ****             SEND_1();
 333              		.loc 1 143 0
 334 0020 FFF7FEFF 		bl	SEND_1
 335 0024 01E0     		b	.L14
 336              	.L13:
 144:main.c        ****         else
 145:main.c        ****             SEND_0();
 337              		.loc 1 145 0
 338 0026 FFF7FEFF 		bl	SEND_0
 339              	.L14:
 141:main.c        ****         if ((b << i) & 0x80)
 340              		.loc 1 141 0 discriminator 2
 341 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 342 002c 0133     		adds	r3, r3, #1
 343 002e FB73     		strb	r3, [r7, #15]
 344              	.L12:
 141:main.c        ****         if ((b << i) & 0x80)
 345              		.loc 1 141 0 is_stmt 0 discriminator 1
 346 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 347 0032 072B     		cmp	r3, #7
 348 0034 ECD9     		bls	.L15
 146:main.c        **** }
 349              		.loc 1 146 0 is_stmt 1
 350 0036 00BF     		nop
 351 0038 1037     		adds	r7, r7, #16
 352              		.cfi_def_cfa_offset 8
 353 003a BD46     		mov	sp, r7
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 003c 80BD     		pop	{r7, pc}
 357              		.cfi_endproc
 358              	.LFE70:
 359              		.size	WriteI2CByte, .-WriteI2CByte
 360 003e 00BF     		.section	.text.ReadI2CByte,"ax",%progbits
 361              		.align	2
 362              		.global	ReadI2CByte
 363              		.thumb
 364              		.thumb_func
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 10


 365              		.type	ReadI2CByte, %function
 366              	ReadI2CByte:
 367              	.LFB71:
 147:main.c        **** 
 148:main.c        **** uchar ReadI2CByte(void)     //ï¿½ï¿½I2Cï¿½ï¿½ï¿½ß¶ï¿½Ò»ï¿½ï¿½ï¿½Ö½ï¿½
 149:main.c        **** {
 368              		.loc 1 149 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 82B0     		sub	sp, sp, #8
 377              		.cfi_def_cfa_offset 16
 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
 150:main.c        **** 
 151:main.c        ****     char b = 0, i;
 380              		.loc 1 151 0
 381 0006 0023     		movs	r3, #0
 382 0008 FB71     		strb	r3, [r7, #7]
 152:main.c        ****     for (i = 0; i < 8; i++)
 383              		.loc 1 152 0
 384 000a 0023     		movs	r3, #0
 385 000c BB71     		strb	r3, [r7, #6]
 386 000e 23E0     		b	.L17
 387              	.L20:
 388              	.LBB2:
 153:main.c        ****     {
 154:main.c        ****         mySDA_Write(1);
 389              		.loc 1 154 0
 390 0010 0120     		movs	r0, #1
 391 0012 FFF7FEFF 		bl	mySDA_Write
 155:main.c        ****         mySCL_Write(1);
 392              		.loc 1 155 0
 393 0016 0120     		movs	r0, #1
 394 0018 FFF7FEFF 		bl	mySCL_Write
 156:main.c        ****         DELAY(5);
 395              		.loc 1 156 0
 396 001c 0520     		movs	r0, #5
 397 001e FFF7FEFF 		bl	DELAY
 157:main.c        ****         uint8_t F0 = mySDA_Read();
 398              		.loc 1 157 0
 399 0022 FFF7FEFF 		bl	mySDA_Read
 400 0026 0346     		mov	r3, r0
 401 0028 7B71     		strb	r3, [r7, #5]
 158:main.c        ****         DELAY(5);
 402              		.loc 1 158 0
 403 002a 0520     		movs	r0, #5
 404 002c FFF7FEFF 		bl	DELAY
 159:main.c        ****         mySCL_Write(0);
 405              		.loc 1 159 0
 406 0030 0020     		movs	r0, #0
 407 0032 FFF7FEFF 		bl	mySCL_Write
 160:main.c        ****         if (F0 == 1)
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 11


 408              		.loc 1 160 0
 409 0036 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 410 0038 012B     		cmp	r3, #1
 411 003a 07D1     		bne	.L18
 161:main.c        ****         {
 162:main.c        ****             b = b << 1;
 412              		.loc 1 162 0
 413 003c FB79     		ldrb	r3, [r7, #7]
 414 003e 5B00     		lsls	r3, r3, #1
 415 0040 FB71     		strb	r3, [r7, #7]
 163:main.c        ****             b = b | 0x01;
 416              		.loc 1 163 0
 417 0042 FB79     		ldrb	r3, [r7, #7]
 418 0044 43F00103 		orr	r3, r3, #1
 419 0048 FB71     		strb	r3, [r7, #7]
 420 004a 02E0     		b	.L19
 421              	.L18:
 164:main.c        ****         }
 165:main.c        ****         else
 166:main.c        ****             b = b << 1;
 422              		.loc 1 166 0
 423 004c FB79     		ldrb	r3, [r7, #7]
 424 004e 5B00     		lsls	r3, r3, #1
 425 0050 FB71     		strb	r3, [r7, #7]
 426              	.L19:
 427              	.LBE2:
 152:main.c        ****     {
 428              		.loc 1 152 0 discriminator 2
 429 0052 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 430 0054 0133     		adds	r3, r3, #1
 431 0056 BB71     		strb	r3, [r7, #6]
 432              	.L17:
 152:main.c        ****     {
 433              		.loc 1 152 0 is_stmt 0 discriminator 1
 434 0058 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 435 005a 072B     		cmp	r3, #7
 436 005c D8D9     		bls	.L20
 167:main.c        ****     }
 168:main.c        ****     return b;
 437              		.loc 1 168 0 is_stmt 1
 438 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 169:main.c        **** }
 439              		.loc 1 169 0
 440 0060 1846     		mov	r0, r3
 441 0062 0837     		adds	r7, r7, #8
 442              		.cfi_def_cfa_offset 8
 443 0064 BD46     		mov	sp, r7
 444              		.cfi_def_cfa_register 13
 445              		@ sp needed
 446 0066 80BD     		pop	{r7, pc}
 447              		.cfi_endproc
 448              	.LFE71:
 449              		.size	ReadI2CByte, .-ReadI2CByte
 450              		.section	.text.Write_One_Byte,"ax",%progbits
 451              		.align	2
 452              		.global	Write_One_Byte
 453              		.thumb
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 12


 454              		.thumb_func
 455              		.type	Write_One_Byte, %function
 456              	Write_One_Byte:
 457              	.LFB72:
 170:main.c        **** 
 171:main.c        **** void Write_One_Byte(uchar addr, uchar thedata)  //ï¿½ï¿½ï¿½ï¿½è±¸Ð´Ò»ï¿½ï¿½ï¿½Ö½ï¿½
 172:main.c        **** {
 458              		.loc 1 172 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 16
 461              		@ frame_needed = 1, uses_anonymous_args = 0
 462 0000 80B5     		push	{r7, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 84B0     		sub	sp, sp, #16
 467              		.cfi_def_cfa_offset 24
 468 0004 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 470 0006 0346     		mov	r3, r0
 471 0008 0A46     		mov	r2, r1
 472 000a FB71     		strb	r3, [r7, #7]
 473 000c 1346     		mov	r3, r2
 474 000e BB71     		strb	r3, [r7, #6]
 173:main.c        ****     int acktemp = 1;
 475              		.loc 1 173 0
 476 0010 0123     		movs	r3, #1
 477 0012 FB60     		str	r3, [r7, #12]
 174:main.c        ****     I2C_Start();                          //ï¿½ï¿½ï¿½ß¿ï¿½Ê¼
 478              		.loc 1 174 0
 479 0014 FFF7FEFF 		bl	I2C_Start
 175:main.c        ****     WriteI2CByte(0xDA);                   //ï¿½ï¿½ï¿½è±¸Í¨Ñ¶ï¿½ï¿½Ö·
 480              		.loc 1 175 0
 481 0018 DA20     		movs	r0, #218
 482 001a FFF7FEFF 		bl	WriteI2CByte
 176:main.c        ****     acktemp = Check_Acknowledge();        //ï¿½ï¿½ï¿½ï¿½Ó¦ï¿½ï¿½ï¿½Åºï¿½
 483              		.loc 1 176 0
 484 001e FFF7FEFF 		bl	Check_Acknowledge
 485 0022 F860     		str	r0, [r7, #12]
 177:main.c        ****     WriteI2CByte(addr); /*address*/       //ï¿½ï¿½addressï¿½×µï¿½Ö·ï¿½ï¿½Ê¼Ð´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
 486              		.loc 1 177 0
 487 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 488 0026 1846     		mov	r0, r3
 489 0028 FFF7FEFF 		bl	WriteI2CByte
 178:main.c        ****     acktemp = Check_Acknowledge();        //
 490              		.loc 1 178 0
 491 002c FFF7FEFF 		bl	Check_Acknowledge
 492 0030 F860     		str	r0, [r7, #12]
 179:main.c        ****     WriteI2CByte(thedata); /*thedata*/    //Ð´ï¿½ï¿½thedata
 493              		.loc 1 179 0
 494 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 495 0034 1846     		mov	r0, r3
 496 0036 FFF7FEFF 		bl	WriteI2CByte
 180:main.c        ****     acktemp = Check_Acknowledge();
 497              		.loc 1 180 0
 498 003a FFF7FEFF 		bl	Check_Acknowledge
 499 003e F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 13


 181:main.c        ****     I2C_Stop();                           //ï¿½ï¿½ï¿½ï¿½Í£Ö¹
 500              		.loc 1 181 0
 501 0040 FFF7FEFF 		bl	I2C_Stop
 182:main.c        **** }
 502              		.loc 1 182 0
 503 0044 00BF     		nop
 504 0046 1037     		adds	r7, r7, #16
 505              		.cfi_def_cfa_offset 8
 506 0048 BD46     		mov	sp, r7
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 004a 80BD     		pop	{r7, pc}
 510              		.cfi_endproc
 511              	.LFE72:
 512              		.size	Write_One_Byte, .-Write_One_Byte
 513              		.section	.text.Read_One_Byte,"ax",%progbits
 514              		.align	2
 515              		.global	Read_One_Byte
 516              		.thumb
 517              		.thumb_func
 518              		.type	Read_One_Byte, %function
 519              	Read_One_Byte:
 520              	.LFB73:
 183:main.c        **** 
 184:main.c        **** uchar Read_One_Byte(uchar addr)    //ï¿½Ó´ï¿½ï¿½è±¸ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ö½ï¿½
 185:main.c        **** {
 521              		.loc 1 185 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 16
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525 0000 80B5     		push	{r7, lr}
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 7, -8
 528              		.cfi_offset 14, -4
 529 0002 84B0     		sub	sp, sp, #16
 530              		.cfi_def_cfa_offset 24
 531 0004 00AF     		add	r7, sp, #0
 532              		.cfi_def_cfa_register 7
 533 0006 0346     		mov	r3, r0
 534 0008 FB71     		strb	r3, [r7, #7]
 186:main.c        ****     int acktemp = 1;
 535              		.loc 1 186 0
 536 000a 0123     		movs	r3, #1
 537 000c FB60     		str	r3, [r7, #12]
 187:main.c        ****     uchar mydata;
 188:main.c        **** 
 189:main.c        ****     I2C_Start();//ï¿½ï¿½ï¿½ß¿ï¿½Ê¼
 538              		.loc 1 189 0
 539 000e FFF7FEFF 		bl	I2C_Start
 190:main.c        ****     WriteI2CByte(0xDA);//ï¿½ï¿½I2Cï¿½ï¿½ï¿½ï¿½Ð´Ò»ï¿½ï¿½ï¿½Ö½ï¿½
 540              		.loc 1 190 0
 541 0012 DA20     		movs	r0, #218
 542 0014 FFF7FEFF 		bl	WriteI2CByte
 191:main.c        ****     acktemp = Check_Acknowledge();
 543              		.loc 1 191 0
 544 0018 FFF7FEFF 		bl	Check_Acknowledge
 545 001c F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 14


 192:main.c        ****     WriteI2CByte(addr);  //ï¿½ï¿½I2Cï¿½ï¿½ï¿½ï¿½Ð´Ò»ï¿½ï¿½ï¿½Ö½Ú£ï¿½addrï¿½Çµï¿½Ö·
 546              		.loc 1 192 0
 547 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 548 0020 1846     		mov	r0, r3
 549 0022 FFF7FEFF 		bl	WriteI2CByte
 193:main.c        ****     acktemp = Check_Acknowledge();
 550              		.loc 1 193 0
 551 0026 FFF7FEFF 		bl	Check_Acknowledge
 552 002a F860     		str	r0, [r7, #12]
 194:main.c        ****     I2C_Start();
 553              		.loc 1 194 0
 554 002c FFF7FEFF 		bl	I2C_Start
 195:main.c        ****     WriteI2CByte(0xDB);
 555              		.loc 1 195 0
 556 0030 DB20     		movs	r0, #219
 557 0032 FFF7FEFF 		bl	WriteI2CByte
 196:main.c        ****     acktemp = Check_Acknowledge();
 558              		.loc 1 196 0
 559 0036 FFF7FEFF 		bl	Check_Acknowledge
 560 003a F860     		str	r0, [r7, #12]
 197:main.c        ****     mydata = ReadI2CByte();
 561              		.loc 1 197 0
 562 003c FFF7FEFF 		bl	ReadI2CByte
 563 0040 0346     		mov	r3, r0
 564 0042 FB72     		strb	r3, [r7, #11]
 198:main.c        ****     acktemp = Check_Acknowledge();
 565              		.loc 1 198 0
 566 0044 FFF7FEFF 		bl	Check_Acknowledge
 567 0048 F860     		str	r0, [r7, #12]
 199:main.c        ****     I2C_Stop();//Í£Ö¹I2Cï¿½ï¿½ï¿½ï¿½
 568              		.loc 1 199 0
 569 004a FFF7FEFF 		bl	I2C_Stop
 200:main.c        ****     return mydata;
 570              		.loc 1 200 0
 571 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 201:main.c        **** }
 572              		.loc 1 201 0
 573 0050 1846     		mov	r0, r3
 574 0052 1037     		adds	r7, r7, #16
 575              		.cfi_def_cfa_offset 8
 576 0054 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 0056 80BD     		pop	{r7, pc}
 580              		.cfi_endproc
 581              	.LFE73:
 582              		.size	Read_One_Byte, .-Read_One_Byte
 583              		.section	.text.Delay_xms,"ax",%progbits
 584              		.align	2
 585              		.global	Delay_xms
 586              		.thumb
 587              		.thumb_func
 588              		.type	Delay_xms, %function
 589              	Delay_xms:
 590              	.LFB74:
 202:main.c        **** void Delay_xms(uint x)  //xï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê±ï¿½ï¿½ï¿½ï¿½
 203:main.c        **** {
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 15


 591              		.loc 1 203 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 16
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0000 80B4     		push	{r7}
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 85B0     		sub	sp, sp, #20
 600              		.cfi_def_cfa_offset 24
 601 0004 00AF     		add	r7, sp, #0
 602              		.cfi_def_cfa_register 7
 603 0006 7860     		str	r0, [r7, #4]
 204:main.c        ****     uint i, j;
 205:main.c        ****     for (i = 0; i < x; i++)
 604              		.loc 1 205 0
 605 0008 0023     		movs	r3, #0
 606 000a FB60     		str	r3, [r7, #12]
 607 000c 0BE0     		b	.L26
 608              	.L29:
 206:main.c        ****         for (j = 0; j < 112; j++)
 609              		.loc 1 206 0
 610 000e 0023     		movs	r3, #0
 611 0010 BB60     		str	r3, [r7, #8]
 612 0012 02E0     		b	.L27
 613              	.L28:
 614              		.loc 1 206 0 is_stmt 0 discriminator 3
 615 0014 BB68     		ldr	r3, [r7, #8]
 616 0016 0133     		adds	r3, r3, #1
 617 0018 BB60     		str	r3, [r7, #8]
 618              	.L27:
 619              		.loc 1 206 0 discriminator 1
 620 001a BB68     		ldr	r3, [r7, #8]
 621 001c 6F2B     		cmp	r3, #111
 622 001e F9D9     		bls	.L28
 205:main.c        ****         for (j = 0; j < 112; j++)
 623              		.loc 1 205 0 is_stmt 1 discriminator 2
 624 0020 FB68     		ldr	r3, [r7, #12]
 625 0022 0133     		adds	r3, r3, #1
 626 0024 FB60     		str	r3, [r7, #12]
 627              	.L26:
 205:main.c        ****         for (j = 0; j < 112; j++)
 628              		.loc 1 205 0 is_stmt 0 discriminator 1
 629 0026 FA68     		ldr	r2, [r7, #12]
 630 0028 7B68     		ldr	r3, [r7, #4]
 631 002a 9A42     		cmp	r2, r3
 632 002c EFD3     		bcc	.L29
 207:main.c        ****             ;
 208:main.c        **** }
 633              		.loc 1 208 0 is_stmt 1
 634 002e 00BF     		nop
 635 0030 1437     		adds	r7, r7, #20
 636              		.cfi_def_cfa_offset 4
 637 0032 BD46     		mov	sp, r7
 638              		.cfi_def_cfa_register 13
 639              		@ sp needed
 640 0034 80BC     		pop	{r7}
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 16


 641              		.cfi_restore 7
 642              		.cfi_def_cfa_offset 0
 643 0036 7047     		bx	lr
 644              		.cfi_endproc
 645              	.LFE74:
 646              		.size	Delay_xms, .-Delay_xms
 647              		.global	__aeabi_i2d
 648              		.global	__aeabi_dmul
 649              		.global	__aeabi_d2iz
 650              		.section	.rodata
 651              		.align	2
 652              	.LC0:
 653 0000 25642050 		.ascii	"%d Pascal\000"
 653      61736361 
 653      6C00
 654 000a 0000     		.align	2
 655              	.LC1:
 656 000c 50726573 		.ascii	"Pressure\000"
 656      73757265 
 656      00
 657 0015 000000   		.align	2
 658              	.LC2:
 659 0018 466C6F77 		.ascii	"Flow \000"
 659      2000
 660              		.global	__aeabi_ui2d
 661 001e 0000     		.align	2
 662              	.LC3:
 663 0020 20256420 		.ascii	" %d Lpm\000"
 663      4C706D00 
 664              		.section	.text.main,"ax",%progbits
 665              		.align	2
 666              		.global	main
 667              		.thumb
 668              		.thumb_func
 669              		.type	main, %function
 670              	main:
 671              	.LFB75:
 209:main.c        **** 
 210:main.c        **** int main(void)
 211:main.c        **** {
 672              		.loc 1 211 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 80
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 B0B5     		push	{r4, r5, r7, lr}
 677              		.cfi_def_cfa_offset 16
 678              		.cfi_offset 4, -16
 679              		.cfi_offset 5, -12
 680              		.cfi_offset 7, -8
 681              		.cfi_offset 14, -4
 682 0002 94B0     		sub	sp, sp, #80
 683              		.cfi_def_cfa_offset 96
 684 0004 00AF     		add	r7, sp, #0
 685              		.cfi_def_cfa_register 7
 212:main.c        ****     /* Variable to hold ADC count */
 213:main.c        ****     int32 voltCount = 0;
 686              		.loc 1 213 0
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 17


 687 0006 0023     		movs	r3, #0
 688 0008 BB64     		str	r3, [r7, #72]
 214:main.c        ****     
 215:main.c        ****     /* Variable to hold the result in millivolts converted from ADC counts */
 216:main.c        ****     int32 mVolts = 0;
 689              		.loc 1 216 0
 690 000a 0023     		movs	r3, #0
 691 000c 7B64     		str	r3, [r7, #68]
 217:main.c        **** 
 218:main.c        ****     /* Variable to count number of samples collected from ADC */
 219:main.c        ****     uint8 sampleCount = 0;
 692              		.loc 1 219 0
 693 000e 0023     		movs	r3, #0
 694 0010 87F84330 		strb	r3, [r7, #67]
 220:main.c        **** 	
 221:main.c        ****     /* Variable to hold cumulative samples */
 222:main.c        ****     int32 voltSamples = 0;
 695              		.loc 1 222 0
 696 0014 0023     		movs	r3, #0
 697 0016 FB63     		str	r3, [r7, #60]
 223:main.c        **** 	
 224:main.c        ****     /* Variable to hold the average volts for 8 samples */
 225:main.c        ****     uint32 averageVolts = 0;
 698              		.loc 1 225 0
 699 0018 0023     		movs	r3, #0
 700 001a BB63     		str	r3, [r7, #56]
 226:main.c        **** 	
 227:main.c        ****     /* Character array to hold the micro volts*/
 228:main.c        ****     char displayStr[15] = {'\0'};
 701              		.loc 1 228 0
 702 001c 07F11803 		add	r3, r7, #24
 703 0020 0022     		movs	r2, #0
 704 0022 1A60     		str	r2, [r3]
 705 0024 5A60     		str	r2, [r3, #4]
 706 0026 9A60     		str	r2, [r3, #8]
 707 0028 C3F80B20 		str	r2, [r3, #11]	@ unaligned
 229:main.c        ****     
 230:main.c        ****     CYGlobalIntEnable;
 708              		.loc 1 230 0
 709              		.syntax unified
 710              	@ 230 "main.c" 1
 711 002c 62B6     		CPSIE   i
 712              	@ 0 "" 2
 231:main.c        ****     
 232:main.c        ****     /* Start ADC and start conversion */
 233:main.c        ****     ADC_Start();
 713              		.loc 1 233 0
 714              		.thumb
 715              		.syntax unified
 716 002e FFF7FEFF 		bl	ADC_Start
 234:main.c        ****     ADC_StartConvert();
 717              		.loc 1 234 0
 718 0032 FFF7FEFF 		bl	ADC_StartConvert
 235:main.c        **** 
 236:main.c        ****     /* Start LCD and set position */
 237:main.c        ****     LCD_Start();
 719              		.loc 1 237 0
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 18


 720 0036 FFF7FEFF 		bl	LCD_Start
 238:main.c        ****    
 239:main.c        ****     
 240:main.c        ****     uchar yali1, yali2, yali3;
 241:main.c        ****     uchar temp_a5;
 242:main.c        ****     long int ad,temp;
 243:main.c        ****      int pas;
 244:main.c        ****     uchar dis[8];
 245:main.c        ****   //  CharLCD_1_Start();
 246:main.c        ****     Counter_1_Start();
 721              		.loc 1 246 0
 722 003a FFF7FEFF 		bl	Counter_1_Start
 247:main.c        ****    
 248:main.c        **** 	/* Enable Global interrupts */
 249:main.c        ****     CyGlobalIntEnable;
 723              		.loc 1 249 0
 724              		.syntax unified
 725              	@ 249 "main.c" 1
 726 003e 62B6     		CPSIE   i
 727              	@ 0 "" 2
 728              		.thumb
 729              		.syntax unified
 730              	.L35:
 731              	.LBB3:
 250:main.c        **** 
 251:main.c        ****    // CharLCD_1_ClearDisplay();  
 252:main.c        ****     
 253:main.c        ****     while(1)
 254:main.c        ****     {
 255:main.c        ****          temp_a5 = Read_One_Byte(0xA5);//Ð¾Æ¬ï¿½Ú²ï¿½ï¿½ï¿½ï¿½ï¿½
 732              		.loc 1 255 0
 733 0040 A520     		movs	r0, #165
 734 0042 FFF7FEFF 		bl	Read_One_Byte
 735 0046 0346     		mov	r3, r0
 736 0048 87F83730 		strb	r3, [r7, #55]
 256:main.c        ****         temp_a5 = temp_a5 & 0xFD;     
 737              		.loc 1 256 0
 738 004c 97F83730 		ldrb	r3, [r7, #55]
 739 0050 23F00203 		bic	r3, r3, #2
 740 0054 87F83730 		strb	r3, [r7, #55]
 257:main.c        ****         Write_One_Byte(0xA5, temp_a5); //ï¿½ï¿½ï¿½Ã´ï¿½ï¿½ï¿½ï¿½ï¿½Ð¾Æ¬ï¿½ï¿½ï¿½Ð£×¼ï¿½ï¿½ï¿½ï¿½
 741              		.loc 1 257 0
 742 0058 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 743 005c 1946     		mov	r1, r3
 744 005e A520     		movs	r0, #165
 745 0060 FFF7FEFF 		bl	Write_One_Byte
 258:main.c        ****         Write_One_Byte(0x30, 0x0A); //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ï²É¼ï¿½Ä£Ê½ï¿½ï¿½ï¿½ï¿½Ê¼ï¿½ï¿½ï¿½Ý²É¼ï¿½ ï
 746              		.loc 1 258 0
 747 0064 0A21     		movs	r1, #10
 748 0066 3020     		movs	r0, #48
 749 0068 FFF7FEFF 		bl	Write_One_Byte
 259:main.c        ****         while ((Read_One_Byte(0x30) & 0x08) > 0);  //ï¿½Ð¶ï¿½ï¿½ï¿½ï¿½Ý²É¼ï¿½ï¿½Ç·ï¿½ï¿½ï¿½ï¿½
 750              		.loc 1 259 0
 751 006c 00BF     		nop
 752              	.L31:
 753              		.loc 1 259 0 is_stmt 0 discriminator 1
 754 006e 3020     		movs	r0, #48
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 19


 755 0070 FFF7FEFF 		bl	Read_One_Byte
 756 0074 0346     		mov	r3, r0
 757 0076 03F00803 		and	r3, r3, #8
 758 007a 002B     		cmp	r3, #0
 759 007c F7DC     		bgt	.L31
 260:main.c        ****         
 261:main.c        **** 			  yali1 = Read_One_Byte(0x06);
 760              		.loc 1 261 0 is_stmt 1
 761 007e 0620     		movs	r0, #6
 762 0080 FFF7FEFF 		bl	Read_One_Byte
 763 0084 0346     		mov	r3, r0
 764 0086 87F83630 		strb	r3, [r7, #54]
 262:main.c        ****         yali2 = Read_One_Byte(0x07);
 765              		.loc 1 262 0
 766 008a 0720     		movs	r0, #7
 767 008c FFF7FEFF 		bl	Read_One_Byte
 768 0090 0346     		mov	r3, r0
 769 0092 87F83530 		strb	r3, [r7, #53]
 263:main.c        ****         yali3 = Read_One_Byte(0x08);	//ï¿½ï¿½È¡Ð¾Æ¬24Î»ADCï¿½ï¿½ï¿½ï¿½Ð£×¼ï¿½ï¿½ï¿½Öµ
 770              		.loc 1 263 0
 771 0096 0820     		movs	r0, #8
 772 0098 FFF7FEFF 		bl	Read_One_Byte
 773 009c 0346     		mov	r3, r0
 774 009e 87F83430 		strb	r3, [r7, #52]
 264:main.c        **** 
 265:main.c        ****         ad = yali1 * 65536 + yali2 * 256 + yali3;
 775              		.loc 1 265 0
 776 00a2 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
 777 00a6 1A02     		lsls	r2, r3, #8
 778 00a8 97F83530 		ldrb	r3, [r7, #53]	@ zero_extendqisi2
 779 00ac 1344     		add	r3, r3, r2
 780 00ae 1A02     		lsls	r2, r3, #8
 781 00b0 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 782 00b4 1344     		add	r3, r3, r2
 783 00b6 3B63     		str	r3, [r7, #48]
 266:main.c        ****         	if (ad > 8388608)
 784              		.loc 1 266 0
 785 00b8 3B6B     		ldr	r3, [r7, #48]
 786 00ba B3F5000F 		cmp	r3, #8388608
 787 00be 13DD     		ble	.L32
 267:main.c        ****         {
 268:main.c        ****             pas = (ad - 16777216) * 0.00390625;
 788              		.loc 1 268 0
 789 00c0 3B6B     		ldr	r3, [r7, #48]
 790 00c2 03F17F43 		add	r3, r3, #-16777216
 791 00c6 1846     		mov	r0, r3
 792 00c8 FFF7FEFF 		bl	__aeabi_i2d
 793 00cc 4FF00002 		mov	r2, #0
 794 00d0 474B     		ldr	r3, .L36+8
 795 00d2 FFF7FEFF 		bl	__aeabi_dmul
 796 00d6 0246     		mov	r2, r0
 797 00d8 0B46     		mov	r3, r1
 798 00da 1046     		mov	r0, r2
 799 00dc 1946     		mov	r1, r3
 800 00de FFF7FEFF 		bl	__aeabi_d2iz
 801 00e2 0346     		mov	r3, r0
 802 00e4 FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 20


 803 00e6 0FE0     		b	.L33
 804              	.L32:
 269:main.c        ****         }
 270:main.c        ****         else
 271:main.c        ****         {
 272:main.c        ****             pas = ad *0.00390625 ;
 805              		.loc 1 272 0
 806 00e8 386B     		ldr	r0, [r7, #48]
 807 00ea FFF7FEFF 		bl	__aeabi_i2d
 808 00ee 4FF00002 		mov	r2, #0
 809 00f2 3F4B     		ldr	r3, .L36+8
 810 00f4 FFF7FEFF 		bl	__aeabi_dmul
 811 00f8 0246     		mov	r2, r0
 812 00fa 0B46     		mov	r3, r1
 813 00fc 1046     		mov	r0, r2
 814 00fe 1946     		mov	r1, r3
 815 0100 FFF7FEFF 		bl	__aeabi_d2iz
 816 0104 0346     		mov	r3, r0
 817 0106 FB64     		str	r3, [r7, #76]
 818              	.L33:
 273:main.c        ****         }
 274:main.c        ****         if (pas < 0)
 819              		.loc 1 274 0
 820 0108 FB6C     		ldr	r3, [r7, #76]
 821 010a 002B     		cmp	r3, #0
 822 010c 0DDA     		bge	.L34
 275:main.c        ****             pas = fabs(pas);
 823              		.loc 1 275 0
 824 010e F86C     		ldr	r0, [r7, #76]
 825 0110 FFF7FEFF 		bl	__aeabi_i2d
 826 0114 0246     		mov	r2, r0
 827 0116 0B46     		mov	r3, r1
 828 0118 1446     		mov	r4, r2
 829 011a 23F00045 		bic	r5, r3, #-2147483648
 830 011e 2046     		mov	r0, r4
 831 0120 2946     		mov	r1, r5
 832 0122 FFF7FEFF 		bl	__aeabi_d2iz
 833 0126 0346     		mov	r3, r0
 834 0128 FB64     		str	r3, [r7, #76]
 835              	.L34:
 276:main.c        ****         CyDelay(1000);
 836              		.loc 1 276 0
 837 012a 4FF47A70 		mov	r0, #1000
 838 012e FFF7FEFF 		bl	CyDelay
 277:main.c        ****        
 278:main.c        ****         sprintf(displayStr,"%d Pascal", pas);
 839              		.loc 1 278 0
 840 0132 07F11803 		add	r3, r7, #24
 841 0136 FA6C     		ldr	r2, [r7, #76]
 842 0138 2E49     		ldr	r1, .L36+12
 843 013a 1846     		mov	r0, r3
 844 013c FFF7FEFF 		bl	sprintf
 279:main.c        ****                // LCD_ClearDisplay();
 280:main.c        ****         LCD_Position(0, 0);
 845              		.loc 1 280 0
 846 0140 0021     		movs	r1, #0
 847 0142 0020     		movs	r0, #0
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 21


 848 0144 FFF7FEFF 		bl	LCD_Position
 281:main.c        ****         LCD_PrintString("Pressure");
 849              		.loc 1 281 0
 850 0148 2B48     		ldr	r0, .L36+16
 851 014a FFF7FEFF 		bl	LCD_PrintString
 282:main.c        ****         LCD_Position(0, 10);
 852              		.loc 1 282 0
 853 014e 0A21     		movs	r1, #10
 854 0150 0020     		movs	r0, #0
 855 0152 FFF7FEFF 		bl	LCD_Position
 283:main.c        ****         LCD_PrintString(displayStr);
 856              		.loc 1 283 0
 857 0156 07F11803 		add	r3, r7, #24
 858 015a 1846     		mov	r0, r3
 859 015c FFF7FEFF 		bl	LCD_PrintString
 284:main.c        ****     
 285:main.c        ****         //LCD_ClearDisplay();
 286:main.c        ****         //---------------------Flow Counter code begins --------------------------------------
 287:main.c        ****         
 288:main.c        ****         Counter_1_WriteCounter(0);
 860              		.loc 1 288 0
 861 0160 0020     		movs	r0, #0
 862 0162 FFF7FEFF 		bl	Counter_1_WriteCounter
 289:main.c        ****         CyDelay(5000);
 863              		.loc 1 289 0
 864 0166 41F28830 		movw	r0, #5000
 865 016a FFF7FEFF 		bl	CyDelay
 290:main.c        ****         //CharLCD_1_Position(0u, 3u);
 291:main.c        ****         uint32_t countPerMin = Counter_1_ReadCounter()*12;   
 866              		.loc 1 291 0
 867 016e FFF7FEFF 		bl	Counter_1_ReadCounter
 868 0172 0246     		mov	r2, r0
 869 0174 1346     		mov	r3, r2
 870 0176 5B00     		lsls	r3, r3, #1
 871 0178 1344     		add	r3, r3, r2
 872 017a 9B00     		lsls	r3, r3, #2
 873 017c FB62     		str	r3, [r7, #44]
 292:main.c        ****       //  CharLCD_1_PrintNumber(countPerMin/12); // display rpm
 293:main.c        ****         
 294:main.c        ****          LCD_Position(1, 0);
 874              		.loc 1 294 0
 875 017e 0021     		movs	r1, #0
 876 0180 0120     		movs	r0, #1
 877 0182 FFF7FEFF 		bl	LCD_Position
 295:main.c        ****         LCD_PrintString("Flow ");
 878              		.loc 1 295 0
 879 0186 1D48     		ldr	r0, .L36+20
 880 0188 FFF7FEFF 		bl	LCD_PrintString
 296:main.c        ****     
 297:main.c        **** 		LCD_Position(1, 5);
 881              		.loc 1 297 0
 882 018c 0521     		movs	r1, #5
 883 018e 0120     		movs	r0, #1
 884 0190 FFF7FEFF 		bl	LCD_Position
 298:main.c        ****         int lpm = countPerMin/12*0.0025;
 885              		.loc 1 298 0
 886 0194 FB6A     		ldr	r3, [r7, #44]
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 22


 887 0196 1A4A     		ldr	r2, .L36+24
 888 0198 A2FB0323 		umull	r2, r3, r2, r3
 889 019c DB08     		lsrs	r3, r3, #3
 890 019e 1846     		mov	r0, r3
 891 01a0 FFF7FEFF 		bl	__aeabi_ui2d
 892 01a4 10A3     		adr	r3, .L36
 893 01a6 D3E90023 		ldrd	r2, [r3]
 894 01aa FFF7FEFF 		bl	__aeabi_dmul
 895 01ae 0246     		mov	r2, r0
 896 01b0 0B46     		mov	r3, r1
 897 01b2 1046     		mov	r0, r2
 898 01b4 1946     		mov	r1, r3
 899 01b6 FFF7FEFF 		bl	__aeabi_d2iz
 900 01ba 0346     		mov	r3, r0
 901 01bc BB62     		str	r3, [r7, #40]
 299:main.c        ****         char displayStr[15] = {'\0'};
 902              		.loc 1 299 0
 903 01be 3B46     		mov	r3, r7
 904 01c0 0022     		movs	r2, #0
 905 01c2 1A60     		str	r2, [r3]
 906 01c4 5A60     		str	r2, [r3, #4]
 907 01c6 9A60     		str	r2, [r3, #8]
 908 01c8 C3F80B20 		str	r2, [r3, #11]	@ unaligned
 300:main.c        ****         sprintf(displayStr, " %d Lpm", lpm );
 909              		.loc 1 300 0
 910 01cc 3B46     		mov	r3, r7
 911 01ce BA6A     		ldr	r2, [r7, #40]
 912 01d0 0C49     		ldr	r1, .L36+28
 913 01d2 1846     		mov	r0, r3
 914 01d4 FFF7FEFF 		bl	sprintf
 301:main.c        ****         LCD_PrintString(displayStr); // display Lpm
 915              		.loc 1 301 0
 916 01d8 3B46     		mov	r3, r7
 917 01da 1846     		mov	r0, r3
 918 01dc FFF7FEFF 		bl	LCD_PrintString
 919              	.LBE3:
 302:main.c        ****         
 303:main.c        ****         
 304:main.c        ****         
 305:main.c        ****         
 306:main.c        ****         
 307:main.c        ****         /* Read ADC count and convert to milli volts */
 308:main.c        ****        /* ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 309:main.c        ****         voltCount = ADC_GetResult16();
 310:main.c        ****         mVolts = ADC_CountsTo_mVolts(voltCount);*/
 311:main.c        ****         
 312:main.c        ****         /* Add the current ADC reading to the cumulated samples*/
 313:main.c        ****         /*voltSamples = voltSamples + mVolts;
 314:main.c        **** 
 315:main.c        ****         sampleCount++;*/
 316:main.c        **** 
 317:main.c        ****         /* If 8 samples have been collected then average the samples and update the display*/
 318:main.c        ****        /* if(sampleCount == MAX_SAMPLE)
 319:main.c        ****         {
 320:main.c        ****             averageVolts = voltSamples >> 3;
 321:main.c        ****             voltSamples = 0;
 322:main.c        ****             sampleCount = 0;*/
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 23


 323:main.c        **** 
 324:main.c        ****             /* Convert milli volts to string and display on the LCD. sprintf()
 325:main.c        ****             *  function is standard library function defined in the stdio.h 
 326:main.c        ****             *  header file */
 327:main.c        ****             //sprintf(displayStr,"    %4ld mV",averageVolts);
 328:main.c        ****            /* LCD_Position(1,0);
 329:main.c        ****             LCD_PrintString(displayStr);*/
 330:main.c        ****         //}	
 331:main.c        ****     }
 920              		.loc 1 331 0
 921 01e0 2EE7     		b	.L35
 922              	.L37:
 923 01e2 00BFAFF3 		.align	3
 923      0080
 924              	.L36:
 925 01e8 7B14AE47 		.word	1202590843
 926 01ec E17A643F 		.word	1063549665
 927 01f0 0000703F 		.word	1064304640
 928 01f4 00000000 		.word	.LC0
 929 01f8 0C000000 		.word	.LC1
 930 01fc 18000000 		.word	.LC2
 931 0200 ABAAAAAA 		.word	-1431655765
 932 0204 20000000 		.word	.LC3
 933              		.cfi_endproc
 934              	.LFE75:
 935              		.size	main, .-main
 936              		.text
 937              	.Letext0:
 938              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 939              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 940              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 941              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 942              		.section	.debug_info,"",%progbits
 943              	.Ldebug_info0:
 944 0000 F8030000 		.4byte	0x3f8
 945 0004 0400     		.2byte	0x4
 946 0006 00000000 		.4byte	.Ldebug_abbrev0
 947 000a 04       		.byte	0x4
 948 000b 01       		.uleb128 0x1
 949 000c 2C000000 		.4byte	.LASF50
 950 0010 0C       		.byte	0xc
 951 0011 C8020000 		.4byte	.LASF51
 952 0015 24020000 		.4byte	.LASF52
 953 0019 00000000 		.4byte	.Ldebug_ranges0+0
 954 001d 00000000 		.4byte	0
 955 0021 00000000 		.4byte	.Ldebug_line0
 956 0025 02       		.uleb128 0x2
 957 0026 01       		.byte	0x1
 958 0027 06       		.byte	0x6
 959 0028 66010000 		.4byte	.LASF0
 960 002c 03       		.uleb128 0x3
 961 002d 32010000 		.4byte	.LASF4
 962 0031 02       		.byte	0x2
 963 0032 1D       		.byte	0x1d
 964 0033 37000000 		.4byte	0x37
 965 0037 02       		.uleb128 0x2
 966 0038 01       		.byte	0x1
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 24


 967 0039 08       		.byte	0x8
 968 003a 58010000 		.4byte	.LASF1
 969 003e 02       		.uleb128 0x2
 970 003f 02       		.byte	0x2
 971 0040 05       		.byte	0x5
 972 0041 19000000 		.4byte	.LASF2
 973 0045 02       		.uleb128 0x2
 974 0046 02       		.byte	0x2
 975 0047 07       		.byte	0x7
 976 0048 C5010000 		.4byte	.LASF3
 977 004c 03       		.uleb128 0x3
 978 004d E3020000 		.4byte	.LASF5
 979 0051 02       		.byte	0x2
 980 0052 3F       		.byte	0x3f
 981 0053 57000000 		.4byte	0x57
 982 0057 02       		.uleb128 0x2
 983 0058 04       		.byte	0x4
 984 0059 05       		.byte	0x5
 985 005a 0D010000 		.4byte	.LASF6
 986 005e 03       		.uleb128 0x3
 987 005f BF000000 		.4byte	.LASF7
 988 0063 02       		.byte	0x2
 989 0064 41       		.byte	0x41
 990 0065 69000000 		.4byte	0x69
 991 0069 02       		.uleb128 0x2
 992 006a 04       		.byte	0x4
 993 006b 07       		.byte	0x7
 994 006c 9F010000 		.4byte	.LASF8
 995 0070 02       		.uleb128 0x2
 996 0071 08       		.byte	0x8
 997 0072 05       		.byte	0x5
 998 0073 F5000000 		.4byte	.LASF9
 999 0077 02       		.uleb128 0x2
 1000 0078 08       		.byte	0x8
 1001 0079 07       		.byte	0x7
 1002 007a 72010000 		.4byte	.LASF10
 1003 007e 04       		.uleb128 0x4
 1004 007f 04       		.byte	0x4
 1005 0080 05       		.byte	0x5
 1006 0081 696E7400 		.ascii	"int\000"
 1007 0085 02       		.uleb128 0x2
 1008 0086 04       		.byte	0x4
 1009 0087 07       		.byte	0x7
 1010 0088 92010000 		.4byte	.LASF11
 1011 008c 03       		.uleb128 0x3
 1012 008d CA000000 		.4byte	.LASF12
 1013 0091 03       		.byte	0x3
 1014 0092 18       		.byte	0x18
 1015 0093 2C000000 		.4byte	0x2c
 1016 0097 03       		.uleb128 0x3
 1017 0098 0E020000 		.4byte	.LASF13
 1018 009c 03       		.byte	0x3
 1019 009d 2C       		.byte	0x2c
 1020 009e 4C000000 		.4byte	0x4c
 1021 00a2 03       		.uleb128 0x3
 1022 00a3 89010000 		.4byte	.LASF14
 1023 00a7 03       		.byte	0x3
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 25


 1024 00a8 30       		.byte	0x30
 1025 00a9 5E000000 		.4byte	0x5e
 1026 00ad 05       		.uleb128 0x5
 1027 00ae E9000000 		.4byte	.LASF15
 1028 00b2 04       		.byte	0x4
 1029 00b3 E401     		.2byte	0x1e4
 1030 00b5 37000000 		.4byte	0x37
 1031 00b9 05       		.uleb128 0x5
 1032 00ba C1020000 		.4byte	.LASF16
 1033 00be 04       		.byte	0x4
 1034 00bf E601     		.2byte	0x1e6
 1035 00c1 69000000 		.4byte	0x69
 1036 00c5 05       		.uleb128 0x5
 1037 00c6 CF020000 		.4byte	.LASF17
 1038 00ca 04       		.byte	0x4
 1039 00cb E901     		.2byte	0x1e9
 1040 00cd 57000000 		.4byte	0x57
 1041 00d1 02       		.uleb128 0x2
 1042 00d2 04       		.byte	0x4
 1043 00d3 04       		.byte	0x4
 1044 00d4 EF000000 		.4byte	.LASF18
 1045 00d8 02       		.uleb128 0x2
 1046 00d9 08       		.byte	0x8
 1047 00da 04       		.byte	0x4
 1048 00db D5020000 		.4byte	.LASF19
 1049 00df 02       		.uleb128 0x2
 1050 00e0 01       		.byte	0x1
 1051 00e1 08       		.byte	0x8
 1052 00e2 09020000 		.4byte	.LASF20
 1053 00e6 02       		.uleb128 0x2
 1054 00e7 08       		.byte	0x8
 1055 00e8 04       		.byte	0x4
 1056 00e9 4C010000 		.4byte	.LASF21
 1057 00ed 02       		.uleb128 0x2
 1058 00ee 04       		.byte	0x4
 1059 00ef 07       		.byte	0x7
 1060 00f0 23000000 		.4byte	.LASF22
 1061 00f4 06       		.uleb128 0x6
 1062 00f5 16020000 		.4byte	.LASF27
 1063 00f9 01       		.byte	0x1
 1064 00fa 4B       		.byte	0x4b
 1065 00fb 00000000 		.4byte	.LFB64
 1066 00ff 20000000 		.4byte	.LFE64-.LFB64
 1067 0103 01       		.uleb128 0x1
 1068 0104 9C       		.byte	0x9c
 1069 0105 16010000 		.4byte	0x116
 1070 0109 07       		.uleb128 0x7
 1071 010a 7400     		.ascii	"t\000"
 1072 010c 01       		.byte	0x1
 1073 010d 4B       		.byte	0x4b
 1074 010e 85000000 		.4byte	0x85
 1075 0112 02       		.uleb128 0x2
 1076 0113 91       		.byte	0x91
 1077 0114 74       		.sleb128 -12
 1078 0115 00       		.byte	0
 1079 0116 08       		.uleb128 0x8
 1080 0117 1F030000 		.4byte	.LASF23
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 26


 1081 011b 01       		.byte	0x1
 1082 011c 50       		.byte	0x50
 1083 011d 00000000 		.4byte	.LFB65
 1084 0121 32000000 		.4byte	.LFE65-.LFB65
 1085 0125 01       		.uleb128 0x1
 1086 0126 9C       		.byte	0x9c
 1087 0127 08       		.uleb128 0x8
 1088 0128 3C010000 		.4byte	.LASF24
 1089 012c 01       		.byte	0x1
 1090 012d 5C       		.byte	0x5c
 1091 012e 00000000 		.4byte	.LFB66
 1092 0132 32000000 		.4byte	.LFE66-.LFB66
 1093 0136 01       		.uleb128 0x1
 1094 0137 9C       		.byte	0x9c
 1095 0138 08       		.uleb128 0x8
 1096 0139 ED020000 		.4byte	.LASF25
 1097 013d 01       		.byte	0x1
 1098 013e 67       		.byte	0x67
 1099 013f 00000000 		.4byte	.LFB67
 1100 0143 26000000 		.4byte	.LFE67-.LFB67
 1101 0147 01       		.uleb128 0x1
 1102 0148 9C       		.byte	0x9c
 1103 0149 08       		.uleb128 0x8
 1104 014a DC020000 		.4byte	.LASF26
 1105 014e 01       		.byte	0x1
 1106 014f 70       		.byte	0x70
 1107 0150 00000000 		.4byte	.LFB68
 1108 0154 26000000 		.4byte	.LFE68-.LFB68
 1109 0158 01       		.uleb128 0x1
 1110 0159 9C       		.byte	0x9c
 1111 015a 09       		.uleb128 0x9
 1112 015b 29030000 		.4byte	.LASF29
 1113 015f 01       		.byte	0x1
 1114 0160 7A       		.byte	0x7a
 1115 0161 7E000000 		.4byte	0x7e
 1116 0165 00000000 		.4byte	.LFB69
 1117 0169 46000000 		.4byte	.LFE69-.LFB69
 1118 016d 01       		.uleb128 0x1
 1119 016e 9C       		.byte	0x9c
 1120 016f 81010000 		.4byte	0x181
 1121 0173 0A       		.uleb128 0xa
 1122 0174 463000   		.ascii	"F0\000"
 1123 0177 01       		.byte	0x1
 1124 0178 80       		.byte	0x80
 1125 0179 8C000000 		.4byte	0x8c
 1126 017d 02       		.uleb128 0x2
 1127 017e 91       		.byte	0x91
 1128 017f 77       		.sleb128 -9
 1129 0180 00       		.byte	0
 1130 0181 0B       		.uleb128 0xb
 1131 0182 00000000 		.4byte	.LASF28
 1132 0186 01       		.byte	0x1
 1133 0187 89       		.byte	0x89
 1134 0188 00000000 		.4byte	.LFB70
 1135 018c 3E000000 		.4byte	.LFE70-.LFB70
 1136 0190 01       		.uleb128 0x1
 1137 0191 9C       		.byte	0x9c
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 27


 1138 0192 AF010000 		.4byte	0x1af
 1139 0196 07       		.uleb128 0x7
 1140 0197 6200     		.ascii	"b\000"
 1141 0199 01       		.byte	0x1
 1142 019a 89       		.byte	0x89
 1143 019b 37000000 		.4byte	0x37
 1144 019f 02       		.uleb128 0x2
 1145 01a0 91       		.byte	0x91
 1146 01a1 6F       		.sleb128 -17
 1147 01a2 0A       		.uleb128 0xa
 1148 01a3 6900     		.ascii	"i\000"
 1149 01a5 01       		.byte	0x1
 1150 01a6 8C       		.byte	0x8c
 1151 01a7 DF000000 		.4byte	0xdf
 1152 01ab 02       		.uleb128 0x2
 1153 01ac 91       		.byte	0x91
 1154 01ad 77       		.sleb128 -9
 1155 01ae 00       		.byte	0
 1156 01af 09       		.uleb128 0x9
 1157 01b0 1B010000 		.4byte	.LASF30
 1158 01b4 01       		.byte	0x1
 1159 01b5 94       		.byte	0x94
 1160 01b6 37000000 		.4byte	0x37
 1161 01ba 00000000 		.4byte	.LFB71
 1162 01be 68000000 		.4byte	.LFE71-.LFB71
 1163 01c2 01       		.uleb128 0x1
 1164 01c3 9C       		.byte	0x9c
 1165 01c4 F8010000 		.4byte	0x1f8
 1166 01c8 0A       		.uleb128 0xa
 1167 01c9 6200     		.ascii	"b\000"
 1168 01cb 01       		.byte	0x1
 1169 01cc 97       		.byte	0x97
 1170 01cd DF000000 		.4byte	0xdf
 1171 01d1 02       		.uleb128 0x2
 1172 01d2 91       		.byte	0x91
 1173 01d3 77       		.sleb128 -9
 1174 01d4 0A       		.uleb128 0xa
 1175 01d5 6900     		.ascii	"i\000"
 1176 01d7 01       		.byte	0x1
 1177 01d8 97       		.byte	0x97
 1178 01d9 DF000000 		.4byte	0xdf
 1179 01dd 02       		.uleb128 0x2
 1180 01de 91       		.byte	0x91
 1181 01df 76       		.sleb128 -10
 1182 01e0 0C       		.uleb128 0xc
 1183 01e1 10000000 		.4byte	.LBB2
 1184 01e5 42000000 		.4byte	.LBE2-.LBB2
 1185 01e9 0A       		.uleb128 0xa
 1186 01ea 463000   		.ascii	"F0\000"
 1187 01ed 01       		.byte	0x1
 1188 01ee 9D       		.byte	0x9d
 1189 01ef 8C000000 		.4byte	0x8c
 1190 01f3 02       		.uleb128 0x2
 1191 01f4 91       		.byte	0x91
 1192 01f5 75       		.sleb128 -11
 1193 01f6 00       		.byte	0
 1194 01f7 00       		.byte	0
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 28


 1195 01f8 0B       		.uleb128 0xb
 1196 01f9 FA010000 		.4byte	.LASF31
 1197 01fd 01       		.byte	0x1
 1198 01fe AB       		.byte	0xab
 1199 01ff 00000000 		.4byte	.LFB72
 1200 0203 4C000000 		.4byte	.LFE72-.LFB72
 1201 0207 01       		.uleb128 0x1
 1202 0208 9C       		.byte	0x9c
 1203 0209 38020000 		.4byte	0x238
 1204 020d 0D       		.uleb128 0xd
 1205 020e 16010000 		.4byte	.LASF32
 1206 0212 01       		.byte	0x1
 1207 0213 AB       		.byte	0xab
 1208 0214 37000000 		.4byte	0x37
 1209 0218 02       		.uleb128 0x2
 1210 0219 91       		.byte	0x91
 1211 021a 6F       		.sleb128 -17
 1212 021b 0D       		.uleb128 0xd
 1213 021c 1C020000 		.4byte	.LASF33
 1214 0220 01       		.byte	0x1
 1215 0221 AB       		.byte	0xab
 1216 0222 37000000 		.4byte	0x37
 1217 0226 02       		.uleb128 0x2
 1218 0227 91       		.byte	0x91
 1219 0228 6E       		.sleb128 -18
 1220 0229 0E       		.uleb128 0xe
 1221 022a BD010000 		.4byte	.LASF34
 1222 022e 01       		.byte	0x1
 1223 022f AD       		.byte	0xad
 1224 0230 7E000000 		.4byte	0x7e
 1225 0234 02       		.uleb128 0x2
 1226 0235 91       		.byte	0x91
 1227 0236 74       		.sleb128 -12
 1228 0237 00       		.byte	0
 1229 0238 09       		.uleb128 0x9
 1230 0239 E0010000 		.4byte	.LASF35
 1231 023d 01       		.byte	0x1
 1232 023e B8       		.byte	0xb8
 1233 023f 37000000 		.4byte	0x37
 1234 0243 00000000 		.4byte	.LFB73
 1235 0247 58000000 		.4byte	.LFE73-.LFB73
 1236 024b 01       		.uleb128 0x1
 1237 024c 9C       		.byte	0x9c
 1238 024d 7C020000 		.4byte	0x27c
 1239 0251 0D       		.uleb128 0xd
 1240 0252 16010000 		.4byte	.LASF32
 1241 0256 01       		.byte	0x1
 1242 0257 B8       		.byte	0xb8
 1243 0258 37000000 		.4byte	0x37
 1244 025c 02       		.uleb128 0x2
 1245 025d 91       		.byte	0x91
 1246 025e 6F       		.sleb128 -17
 1247 025f 0E       		.uleb128 0xe
 1248 0260 BD010000 		.4byte	.LASF34
 1249 0264 01       		.byte	0x1
 1250 0265 BA       		.byte	0xba
 1251 0266 7E000000 		.4byte	0x7e
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 29


 1252 026a 02       		.uleb128 0x2
 1253 026b 91       		.byte	0x91
 1254 026c 74       		.sleb128 -12
 1255 026d 0E       		.uleb128 0xe
 1256 026e 0D000000 		.4byte	.LASF36
 1257 0272 01       		.byte	0x1
 1258 0273 BB       		.byte	0xbb
 1259 0274 37000000 		.4byte	0x37
 1260 0278 02       		.uleb128 0x2
 1261 0279 91       		.byte	0x91
 1262 027a 73       		.sleb128 -13
 1263 027b 00       		.byte	0
 1264 027c 06       		.uleb128 0x6
 1265 027d D2000000 		.4byte	.LASF37
 1266 0281 01       		.byte	0x1
 1267 0282 CA       		.byte	0xca
 1268 0283 00000000 		.4byte	.LFB74
 1269 0287 38000000 		.4byte	.LFE74-.LFB74
 1270 028b 01       		.uleb128 0x1
 1271 028c 9C       		.byte	0x9c
 1272 028d B6020000 		.4byte	0x2b6
 1273 0291 07       		.uleb128 0x7
 1274 0292 7800     		.ascii	"x\000"
 1275 0294 01       		.byte	0x1
 1276 0295 CA       		.byte	0xca
 1277 0296 85000000 		.4byte	0x85
 1278 029a 02       		.uleb128 0x2
 1279 029b 91       		.byte	0x91
 1280 029c 6C       		.sleb128 -20
 1281 029d 0A       		.uleb128 0xa
 1282 029e 6900     		.ascii	"i\000"
 1283 02a0 01       		.byte	0x1
 1284 02a1 CC       		.byte	0xcc
 1285 02a2 85000000 		.4byte	0x85
 1286 02a6 02       		.uleb128 0x2
 1287 02a7 91       		.byte	0x91
 1288 02a8 74       		.sleb128 -12
 1289 02a9 0A       		.uleb128 0xa
 1290 02aa 6A00     		.ascii	"j\000"
 1291 02ac 01       		.byte	0x1
 1292 02ad CC       		.byte	0xcc
 1293 02ae 85000000 		.4byte	0x85
 1294 02b2 02       		.uleb128 0x2
 1295 02b3 91       		.byte	0x91
 1296 02b4 70       		.sleb128 -16
 1297 02b5 00       		.byte	0
 1298 02b6 09       		.uleb128 0x9
 1299 02b7 BA000000 		.4byte	.LASF38
 1300 02bb 01       		.byte	0x1
 1301 02bc D2       		.byte	0xd2
 1302 02bd 7E000000 		.4byte	0x7e
 1303 02c1 00000000 		.4byte	.LFB75
 1304 02c5 08020000 		.4byte	.LFE75-.LFB75
 1305 02c9 01       		.uleb128 0x1
 1306 02ca 9C       		.byte	0x9c
 1307 02cb CA030000 		.4byte	0x3ca
 1308 02cf 0E       		.uleb128 0xe
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 30


 1309 02d0 03010000 		.4byte	.LASF39
 1310 02d4 01       		.byte	0x1
 1311 02d5 D5       		.byte	0xd5
 1312 02d6 C5000000 		.4byte	0xc5
 1313 02da 02       		.uleb128 0x2
 1314 02db 91       		.byte	0x91
 1315 02dc 68       		.sleb128 -24
 1316 02dd 0E       		.uleb128 0xe
 1317 02de 45010000 		.4byte	.LASF40
 1318 02e2 01       		.byte	0x1
 1319 02e3 D8       		.byte	0xd8
 1320 02e4 C5000000 		.4byte	0xc5
 1321 02e8 02       		.uleb128 0x2
 1322 02e9 91       		.byte	0x91
 1323 02ea 64       		.sleb128 -28
 1324 02eb 0E       		.uleb128 0xe
 1325 02ec 06030000 		.4byte	.LASF41
 1326 02f0 01       		.byte	0x1
 1327 02f1 DB       		.byte	0xdb
 1328 02f2 AD000000 		.4byte	0xad
 1329 02f6 02       		.uleb128 0x2
 1330 02f7 91       		.byte	0x91
 1331 02f8 63       		.sleb128 -29
 1332 02f9 0E       		.uleb128 0xe
 1333 02fa EE010000 		.4byte	.LASF42
 1334 02fe 01       		.byte	0x1
 1335 02ff DE       		.byte	0xde
 1336 0300 C5000000 		.4byte	0xc5
 1337 0304 02       		.uleb128 0x2
 1338 0305 91       		.byte	0x91
 1339 0306 5C       		.sleb128 -36
 1340 0307 0E       		.uleb128 0xe
 1341 0308 DC000000 		.4byte	.LASF43
 1342 030c 01       		.byte	0x1
 1343 030d E1       		.byte	0xe1
 1344 030e B9000000 		.4byte	0xb9
 1345 0312 02       		.uleb128 0x2
 1346 0313 91       		.byte	0x91
 1347 0314 58       		.sleb128 -40
 1348 0315 0E       		.uleb128 0xe
 1349 0316 27010000 		.4byte	.LASF44
 1350 031a 01       		.byte	0x1
 1351 031b E4       		.byte	0xe4
 1352 031c CA030000 		.4byte	0x3ca
 1353 0320 03       		.uleb128 0x3
 1354 0321 91       		.byte	0x91
 1355 0322 B87F     		.sleb128 -72
 1356 0324 0E       		.uleb128 0xe
 1357 0325 F4020000 		.4byte	.LASF45
 1358 0329 01       		.byte	0x1
 1359 032a F0       		.byte	0xf0
 1360 032b 37000000 		.4byte	0x37
 1361 032f 02       		.uleb128 0x2
 1362 0330 91       		.byte	0x91
 1363 0331 56       		.sleb128 -42
 1364 0332 0E       		.uleb128 0xe
 1365 0333 FA020000 		.4byte	.LASF46
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 31


 1366 0337 01       		.byte	0x1
 1367 0338 F0       		.byte	0xf0
 1368 0339 37000000 		.4byte	0x37
 1369 033d 02       		.uleb128 0x2
 1370 033e 91       		.byte	0x91
 1371 033f 55       		.sleb128 -43
 1372 0340 0E       		.uleb128 0xe
 1373 0341 00030000 		.4byte	.LASF47
 1374 0345 01       		.byte	0x1
 1375 0346 F0       		.byte	0xf0
 1376 0347 37000000 		.4byte	0x37
 1377 034b 02       		.uleb128 0x2
 1378 034c 91       		.byte	0x91
 1379 034d 54       		.sleb128 -44
 1380 034e 0E       		.uleb128 0xe
 1381 034f D8010000 		.4byte	.LASF48
 1382 0353 01       		.byte	0x1
 1383 0354 F1       		.byte	0xf1
 1384 0355 37000000 		.4byte	0x37
 1385 0359 02       		.uleb128 0x2
 1386 035a 91       		.byte	0x91
 1387 035b 57       		.sleb128 -41
 1388 035c 0A       		.uleb128 0xa
 1389 035d 616400   		.ascii	"ad\000"
 1390 0360 01       		.byte	0x1
 1391 0361 F2       		.byte	0xf2
 1392 0362 57000000 		.4byte	0x57
 1393 0366 02       		.uleb128 0x2
 1394 0367 91       		.byte	0x91
 1395 0368 50       		.sleb128 -48
 1396 0369 0F       		.uleb128 0xf
 1397 036a 14000000 		.4byte	.LASF53
 1398 036e 01       		.byte	0x1
 1399 036f F2       		.byte	0xf2
 1400 0370 57000000 		.4byte	0x57
 1401 0374 0A       		.uleb128 0xa
 1402 0375 70617300 		.ascii	"pas\000"
 1403 0379 01       		.byte	0x1
 1404 037a F3       		.byte	0xf3
 1405 037b 7E000000 		.4byte	0x7e
 1406 037f 02       		.uleb128 0x2
 1407 0380 91       		.byte	0x91
 1408 0381 6C       		.sleb128 -20
 1409 0382 0A       		.uleb128 0xa
 1410 0383 64697300 		.ascii	"dis\000"
 1411 0387 01       		.byte	0x1
 1412 0388 F4       		.byte	0xf4
 1413 0389 DA030000 		.4byte	0x3da
 1414 038d 03       		.uleb128 0x3
 1415 038e 91       		.byte	0x91
 1416 038f B07F     		.sleb128 -80
 1417 0391 0C       		.uleb128 0xc
 1418 0392 40000000 		.4byte	.LBB3
 1419 0396 A0010000 		.4byte	.LBE3-.LBB3
 1420 039a 10       		.uleb128 0x10
 1421 039b B1010000 		.4byte	.LASF49
 1422 039f 01       		.byte	0x1
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 32


 1423 03a0 2301     		.2byte	0x123
 1424 03a2 A2000000 		.4byte	0xa2
 1425 03a6 02       		.uleb128 0x2
 1426 03a7 91       		.byte	0x91
 1427 03a8 4C       		.sleb128 -52
 1428 03a9 11       		.uleb128 0x11
 1429 03aa 6C706D00 		.ascii	"lpm\000"
 1430 03ae 01       		.byte	0x1
 1431 03af 2A01     		.2byte	0x12a
 1432 03b1 7E000000 		.4byte	0x7e
 1433 03b5 02       		.uleb128 0x2
 1434 03b6 91       		.byte	0x91
 1435 03b7 48       		.sleb128 -56
 1436 03b8 10       		.uleb128 0x10
 1437 03b9 27010000 		.4byte	.LASF44
 1438 03bd 01       		.byte	0x1
 1439 03be 2B01     		.2byte	0x12b
 1440 03c0 CA030000 		.4byte	0x3ca
 1441 03c4 03       		.uleb128 0x3
 1442 03c5 91       		.byte	0x91
 1443 03c6 A07F     		.sleb128 -96
 1444 03c8 00       		.byte	0
 1445 03c9 00       		.byte	0
 1446 03ca 12       		.uleb128 0x12
 1447 03cb DF000000 		.4byte	0xdf
 1448 03cf DA030000 		.4byte	0x3da
 1449 03d3 13       		.uleb128 0x13
 1450 03d4 ED000000 		.4byte	0xed
 1451 03d8 0E       		.byte	0xe
 1452 03d9 00       		.byte	0
 1453 03da 12       		.uleb128 0x12
 1454 03db 37000000 		.4byte	0x37
 1455 03df EA030000 		.4byte	0x3ea
 1456 03e3 13       		.uleb128 0x13
 1457 03e4 ED000000 		.4byte	0xed
 1458 03e8 07       		.byte	0x7
 1459 03e9 00       		.byte	0
 1460 03ea 14       		.uleb128 0x14
 1461 03eb 12030000 		.4byte	.LASF54
 1462 03ef 05       		.byte	0x5
 1463 03f0 1207     		.2byte	0x712
 1464 03f2 F6030000 		.4byte	0x3f6
 1465 03f6 15       		.uleb128 0x15
 1466 03f7 97000000 		.4byte	0x97
 1467 03fb 00       		.byte	0
 1468              		.section	.debug_abbrev,"",%progbits
 1469              	.Ldebug_abbrev0:
 1470 0000 01       		.uleb128 0x1
 1471 0001 11       		.uleb128 0x11
 1472 0002 01       		.byte	0x1
 1473 0003 25       		.uleb128 0x25
 1474 0004 0E       		.uleb128 0xe
 1475 0005 13       		.uleb128 0x13
 1476 0006 0B       		.uleb128 0xb
 1477 0007 03       		.uleb128 0x3
 1478 0008 0E       		.uleb128 0xe
 1479 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 33


 1480 000a 0E       		.uleb128 0xe
 1481 000b 55       		.uleb128 0x55
 1482 000c 17       		.uleb128 0x17
 1483 000d 11       		.uleb128 0x11
 1484 000e 01       		.uleb128 0x1
 1485 000f 10       		.uleb128 0x10
 1486 0010 17       		.uleb128 0x17
 1487 0011 00       		.byte	0
 1488 0012 00       		.byte	0
 1489 0013 02       		.uleb128 0x2
 1490 0014 24       		.uleb128 0x24
 1491 0015 00       		.byte	0
 1492 0016 0B       		.uleb128 0xb
 1493 0017 0B       		.uleb128 0xb
 1494 0018 3E       		.uleb128 0x3e
 1495 0019 0B       		.uleb128 0xb
 1496 001a 03       		.uleb128 0x3
 1497 001b 0E       		.uleb128 0xe
 1498 001c 00       		.byte	0
 1499 001d 00       		.byte	0
 1500 001e 03       		.uleb128 0x3
 1501 001f 16       		.uleb128 0x16
 1502 0020 00       		.byte	0
 1503 0021 03       		.uleb128 0x3
 1504 0022 0E       		.uleb128 0xe
 1505 0023 3A       		.uleb128 0x3a
 1506 0024 0B       		.uleb128 0xb
 1507 0025 3B       		.uleb128 0x3b
 1508 0026 0B       		.uleb128 0xb
 1509 0027 49       		.uleb128 0x49
 1510 0028 13       		.uleb128 0x13
 1511 0029 00       		.byte	0
 1512 002a 00       		.byte	0
 1513 002b 04       		.uleb128 0x4
 1514 002c 24       		.uleb128 0x24
 1515 002d 00       		.byte	0
 1516 002e 0B       		.uleb128 0xb
 1517 002f 0B       		.uleb128 0xb
 1518 0030 3E       		.uleb128 0x3e
 1519 0031 0B       		.uleb128 0xb
 1520 0032 03       		.uleb128 0x3
 1521 0033 08       		.uleb128 0x8
 1522 0034 00       		.byte	0
 1523 0035 00       		.byte	0
 1524 0036 05       		.uleb128 0x5
 1525 0037 16       		.uleb128 0x16
 1526 0038 00       		.byte	0
 1527 0039 03       		.uleb128 0x3
 1528 003a 0E       		.uleb128 0xe
 1529 003b 3A       		.uleb128 0x3a
 1530 003c 0B       		.uleb128 0xb
 1531 003d 3B       		.uleb128 0x3b
 1532 003e 05       		.uleb128 0x5
 1533 003f 49       		.uleb128 0x49
 1534 0040 13       		.uleb128 0x13
 1535 0041 00       		.byte	0
 1536 0042 00       		.byte	0
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 34


 1537 0043 06       		.uleb128 0x6
 1538 0044 2E       		.uleb128 0x2e
 1539 0045 01       		.byte	0x1
 1540 0046 3F       		.uleb128 0x3f
 1541 0047 19       		.uleb128 0x19
 1542 0048 03       		.uleb128 0x3
 1543 0049 0E       		.uleb128 0xe
 1544 004a 3A       		.uleb128 0x3a
 1545 004b 0B       		.uleb128 0xb
 1546 004c 3B       		.uleb128 0x3b
 1547 004d 0B       		.uleb128 0xb
 1548 004e 27       		.uleb128 0x27
 1549 004f 19       		.uleb128 0x19
 1550 0050 11       		.uleb128 0x11
 1551 0051 01       		.uleb128 0x1
 1552 0052 12       		.uleb128 0x12
 1553 0053 06       		.uleb128 0x6
 1554 0054 40       		.uleb128 0x40
 1555 0055 18       		.uleb128 0x18
 1556 0056 9742     		.uleb128 0x2117
 1557 0058 19       		.uleb128 0x19
 1558 0059 01       		.uleb128 0x1
 1559 005a 13       		.uleb128 0x13
 1560 005b 00       		.byte	0
 1561 005c 00       		.byte	0
 1562 005d 07       		.uleb128 0x7
 1563 005e 05       		.uleb128 0x5
 1564 005f 00       		.byte	0
 1565 0060 03       		.uleb128 0x3
 1566 0061 08       		.uleb128 0x8
 1567 0062 3A       		.uleb128 0x3a
 1568 0063 0B       		.uleb128 0xb
 1569 0064 3B       		.uleb128 0x3b
 1570 0065 0B       		.uleb128 0xb
 1571 0066 49       		.uleb128 0x49
 1572 0067 13       		.uleb128 0x13
 1573 0068 02       		.uleb128 0x2
 1574 0069 18       		.uleb128 0x18
 1575 006a 00       		.byte	0
 1576 006b 00       		.byte	0
 1577 006c 08       		.uleb128 0x8
 1578 006d 2E       		.uleb128 0x2e
 1579 006e 00       		.byte	0
 1580 006f 3F       		.uleb128 0x3f
 1581 0070 19       		.uleb128 0x19
 1582 0071 03       		.uleb128 0x3
 1583 0072 0E       		.uleb128 0xe
 1584 0073 3A       		.uleb128 0x3a
 1585 0074 0B       		.uleb128 0xb
 1586 0075 3B       		.uleb128 0x3b
 1587 0076 0B       		.uleb128 0xb
 1588 0077 27       		.uleb128 0x27
 1589 0078 19       		.uleb128 0x19
 1590 0079 11       		.uleb128 0x11
 1591 007a 01       		.uleb128 0x1
 1592 007b 12       		.uleb128 0x12
 1593 007c 06       		.uleb128 0x6
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 35


 1594 007d 40       		.uleb128 0x40
 1595 007e 18       		.uleb128 0x18
 1596 007f 9642     		.uleb128 0x2116
 1597 0081 19       		.uleb128 0x19
 1598 0082 00       		.byte	0
 1599 0083 00       		.byte	0
 1600 0084 09       		.uleb128 0x9
 1601 0085 2E       		.uleb128 0x2e
 1602 0086 01       		.byte	0x1
 1603 0087 3F       		.uleb128 0x3f
 1604 0088 19       		.uleb128 0x19
 1605 0089 03       		.uleb128 0x3
 1606 008a 0E       		.uleb128 0xe
 1607 008b 3A       		.uleb128 0x3a
 1608 008c 0B       		.uleb128 0xb
 1609 008d 3B       		.uleb128 0x3b
 1610 008e 0B       		.uleb128 0xb
 1611 008f 27       		.uleb128 0x27
 1612 0090 19       		.uleb128 0x19
 1613 0091 49       		.uleb128 0x49
 1614 0092 13       		.uleb128 0x13
 1615 0093 11       		.uleb128 0x11
 1616 0094 01       		.uleb128 0x1
 1617 0095 12       		.uleb128 0x12
 1618 0096 06       		.uleb128 0x6
 1619 0097 40       		.uleb128 0x40
 1620 0098 18       		.uleb128 0x18
 1621 0099 9642     		.uleb128 0x2116
 1622 009b 19       		.uleb128 0x19
 1623 009c 01       		.uleb128 0x1
 1624 009d 13       		.uleb128 0x13
 1625 009e 00       		.byte	0
 1626 009f 00       		.byte	0
 1627 00a0 0A       		.uleb128 0xa
 1628 00a1 34       		.uleb128 0x34
 1629 00a2 00       		.byte	0
 1630 00a3 03       		.uleb128 0x3
 1631 00a4 08       		.uleb128 0x8
 1632 00a5 3A       		.uleb128 0x3a
 1633 00a6 0B       		.uleb128 0xb
 1634 00a7 3B       		.uleb128 0x3b
 1635 00a8 0B       		.uleb128 0xb
 1636 00a9 49       		.uleb128 0x49
 1637 00aa 13       		.uleb128 0x13
 1638 00ab 02       		.uleb128 0x2
 1639 00ac 18       		.uleb128 0x18
 1640 00ad 00       		.byte	0
 1641 00ae 00       		.byte	0
 1642 00af 0B       		.uleb128 0xb
 1643 00b0 2E       		.uleb128 0x2e
 1644 00b1 01       		.byte	0x1
 1645 00b2 3F       		.uleb128 0x3f
 1646 00b3 19       		.uleb128 0x19
 1647 00b4 03       		.uleb128 0x3
 1648 00b5 0E       		.uleb128 0xe
 1649 00b6 3A       		.uleb128 0x3a
 1650 00b7 0B       		.uleb128 0xb
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 36


 1651 00b8 3B       		.uleb128 0x3b
 1652 00b9 0B       		.uleb128 0xb
 1653 00ba 27       		.uleb128 0x27
 1654 00bb 19       		.uleb128 0x19
 1655 00bc 11       		.uleb128 0x11
 1656 00bd 01       		.uleb128 0x1
 1657 00be 12       		.uleb128 0x12
 1658 00bf 06       		.uleb128 0x6
 1659 00c0 40       		.uleb128 0x40
 1660 00c1 18       		.uleb128 0x18
 1661 00c2 9642     		.uleb128 0x2116
 1662 00c4 19       		.uleb128 0x19
 1663 00c5 01       		.uleb128 0x1
 1664 00c6 13       		.uleb128 0x13
 1665 00c7 00       		.byte	0
 1666 00c8 00       		.byte	0
 1667 00c9 0C       		.uleb128 0xc
 1668 00ca 0B       		.uleb128 0xb
 1669 00cb 01       		.byte	0x1
 1670 00cc 11       		.uleb128 0x11
 1671 00cd 01       		.uleb128 0x1
 1672 00ce 12       		.uleb128 0x12
 1673 00cf 06       		.uleb128 0x6
 1674 00d0 00       		.byte	0
 1675 00d1 00       		.byte	0
 1676 00d2 0D       		.uleb128 0xd
 1677 00d3 05       		.uleb128 0x5
 1678 00d4 00       		.byte	0
 1679 00d5 03       		.uleb128 0x3
 1680 00d6 0E       		.uleb128 0xe
 1681 00d7 3A       		.uleb128 0x3a
 1682 00d8 0B       		.uleb128 0xb
 1683 00d9 3B       		.uleb128 0x3b
 1684 00da 0B       		.uleb128 0xb
 1685 00db 49       		.uleb128 0x49
 1686 00dc 13       		.uleb128 0x13
 1687 00dd 02       		.uleb128 0x2
 1688 00de 18       		.uleb128 0x18
 1689 00df 00       		.byte	0
 1690 00e0 00       		.byte	0
 1691 00e1 0E       		.uleb128 0xe
 1692 00e2 34       		.uleb128 0x34
 1693 00e3 00       		.byte	0
 1694 00e4 03       		.uleb128 0x3
 1695 00e5 0E       		.uleb128 0xe
 1696 00e6 3A       		.uleb128 0x3a
 1697 00e7 0B       		.uleb128 0xb
 1698 00e8 3B       		.uleb128 0x3b
 1699 00e9 0B       		.uleb128 0xb
 1700 00ea 49       		.uleb128 0x49
 1701 00eb 13       		.uleb128 0x13
 1702 00ec 02       		.uleb128 0x2
 1703 00ed 18       		.uleb128 0x18
 1704 00ee 00       		.byte	0
 1705 00ef 00       		.byte	0
 1706 00f0 0F       		.uleb128 0xf
 1707 00f1 34       		.uleb128 0x34
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 37


 1708 00f2 00       		.byte	0
 1709 00f3 03       		.uleb128 0x3
 1710 00f4 0E       		.uleb128 0xe
 1711 00f5 3A       		.uleb128 0x3a
 1712 00f6 0B       		.uleb128 0xb
 1713 00f7 3B       		.uleb128 0x3b
 1714 00f8 0B       		.uleb128 0xb
 1715 00f9 49       		.uleb128 0x49
 1716 00fa 13       		.uleb128 0x13
 1717 00fb 00       		.byte	0
 1718 00fc 00       		.byte	0
 1719 00fd 10       		.uleb128 0x10
 1720 00fe 34       		.uleb128 0x34
 1721 00ff 00       		.byte	0
 1722 0100 03       		.uleb128 0x3
 1723 0101 0E       		.uleb128 0xe
 1724 0102 3A       		.uleb128 0x3a
 1725 0103 0B       		.uleb128 0xb
 1726 0104 3B       		.uleb128 0x3b
 1727 0105 05       		.uleb128 0x5
 1728 0106 49       		.uleb128 0x49
 1729 0107 13       		.uleb128 0x13
 1730 0108 02       		.uleb128 0x2
 1731 0109 18       		.uleb128 0x18
 1732 010a 00       		.byte	0
 1733 010b 00       		.byte	0
 1734 010c 11       		.uleb128 0x11
 1735 010d 34       		.uleb128 0x34
 1736 010e 00       		.byte	0
 1737 010f 03       		.uleb128 0x3
 1738 0110 08       		.uleb128 0x8
 1739 0111 3A       		.uleb128 0x3a
 1740 0112 0B       		.uleb128 0xb
 1741 0113 3B       		.uleb128 0x3b
 1742 0114 05       		.uleb128 0x5
 1743 0115 49       		.uleb128 0x49
 1744 0116 13       		.uleb128 0x13
 1745 0117 02       		.uleb128 0x2
 1746 0118 18       		.uleb128 0x18
 1747 0119 00       		.byte	0
 1748 011a 00       		.byte	0
 1749 011b 12       		.uleb128 0x12
 1750 011c 01       		.uleb128 0x1
 1751 011d 01       		.byte	0x1
 1752 011e 49       		.uleb128 0x49
 1753 011f 13       		.uleb128 0x13
 1754 0120 01       		.uleb128 0x1
 1755 0121 13       		.uleb128 0x13
 1756 0122 00       		.byte	0
 1757 0123 00       		.byte	0
 1758 0124 13       		.uleb128 0x13
 1759 0125 21       		.uleb128 0x21
 1760 0126 00       		.byte	0
 1761 0127 49       		.uleb128 0x49
 1762 0128 13       		.uleb128 0x13
 1763 0129 2F       		.uleb128 0x2f
 1764 012a 0B       		.uleb128 0xb
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 38


 1765 012b 00       		.byte	0
 1766 012c 00       		.byte	0
 1767 012d 14       		.uleb128 0x14
 1768 012e 34       		.uleb128 0x34
 1769 012f 00       		.byte	0
 1770 0130 03       		.uleb128 0x3
 1771 0131 0E       		.uleb128 0xe
 1772 0132 3A       		.uleb128 0x3a
 1773 0133 0B       		.uleb128 0xb
 1774 0134 3B       		.uleb128 0x3b
 1775 0135 05       		.uleb128 0x5
 1776 0136 49       		.uleb128 0x49
 1777 0137 13       		.uleb128 0x13
 1778 0138 3F       		.uleb128 0x3f
 1779 0139 19       		.uleb128 0x19
 1780 013a 3C       		.uleb128 0x3c
 1781 013b 19       		.uleb128 0x19
 1782 013c 00       		.byte	0
 1783 013d 00       		.byte	0
 1784 013e 15       		.uleb128 0x15
 1785 013f 35       		.uleb128 0x35
 1786 0140 00       		.byte	0
 1787 0141 49       		.uleb128 0x49
 1788 0142 13       		.uleb128 0x13
 1789 0143 00       		.byte	0
 1790 0144 00       		.byte	0
 1791 0145 00       		.byte	0
 1792              		.section	.debug_aranges,"",%progbits
 1793 0000 74000000 		.4byte	0x74
 1794 0004 0200     		.2byte	0x2
 1795 0006 00000000 		.4byte	.Ldebug_info0
 1796 000a 04       		.byte	0x4
 1797 000b 00       		.byte	0
 1798 000c 0000     		.2byte	0
 1799 000e 0000     		.2byte	0
 1800 0010 00000000 		.4byte	.LFB64
 1801 0014 20000000 		.4byte	.LFE64-.LFB64
 1802 0018 00000000 		.4byte	.LFB65
 1803 001c 32000000 		.4byte	.LFE65-.LFB65
 1804 0020 00000000 		.4byte	.LFB66
 1805 0024 32000000 		.4byte	.LFE66-.LFB66
 1806 0028 00000000 		.4byte	.LFB67
 1807 002c 26000000 		.4byte	.LFE67-.LFB67
 1808 0030 00000000 		.4byte	.LFB68
 1809 0034 26000000 		.4byte	.LFE68-.LFB68
 1810 0038 00000000 		.4byte	.LFB69
 1811 003c 46000000 		.4byte	.LFE69-.LFB69
 1812 0040 00000000 		.4byte	.LFB70
 1813 0044 3E000000 		.4byte	.LFE70-.LFB70
 1814 0048 00000000 		.4byte	.LFB71
 1815 004c 68000000 		.4byte	.LFE71-.LFB71
 1816 0050 00000000 		.4byte	.LFB72
 1817 0054 4C000000 		.4byte	.LFE72-.LFB72
 1818 0058 00000000 		.4byte	.LFB73
 1819 005c 58000000 		.4byte	.LFE73-.LFB73
 1820 0060 00000000 		.4byte	.LFB74
 1821 0064 38000000 		.4byte	.LFE74-.LFB74
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 39


 1822 0068 00000000 		.4byte	.LFB75
 1823 006c 08020000 		.4byte	.LFE75-.LFB75
 1824 0070 00000000 		.4byte	0
 1825 0074 00000000 		.4byte	0
 1826              		.section	.debug_ranges,"",%progbits
 1827              	.Ldebug_ranges0:
 1828 0000 00000000 		.4byte	.LFB64
 1829 0004 20000000 		.4byte	.LFE64
 1830 0008 00000000 		.4byte	.LFB65
 1831 000c 32000000 		.4byte	.LFE65
 1832 0010 00000000 		.4byte	.LFB66
 1833 0014 32000000 		.4byte	.LFE66
 1834 0018 00000000 		.4byte	.LFB67
 1835 001c 26000000 		.4byte	.LFE67
 1836 0020 00000000 		.4byte	.LFB68
 1837 0024 26000000 		.4byte	.LFE68
 1838 0028 00000000 		.4byte	.LFB69
 1839 002c 46000000 		.4byte	.LFE69
 1840 0030 00000000 		.4byte	.LFB70
 1841 0034 3E000000 		.4byte	.LFE70
 1842 0038 00000000 		.4byte	.LFB71
 1843 003c 68000000 		.4byte	.LFE71
 1844 0040 00000000 		.4byte	.LFB72
 1845 0044 4C000000 		.4byte	.LFE72
 1846 0048 00000000 		.4byte	.LFB73
 1847 004c 58000000 		.4byte	.LFE73
 1848 0050 00000000 		.4byte	.LFB74
 1849 0054 38000000 		.4byte	.LFE74
 1850 0058 00000000 		.4byte	.LFB75
 1851 005c 08020000 		.4byte	.LFE75
 1852 0060 00000000 		.4byte	0
 1853 0064 00000000 		.4byte	0
 1854              		.section	.debug_line,"",%progbits
 1855              	.Ldebug_line0:
 1856 0000 D7020000 		.section	.debug_str,"MS",%progbits,1
 1856      02004C01 
 1856      00000201 
 1856      FB0E0D00 
 1856      01010101 
 1857              	.LASF28:
 1858 0000 57726974 		.ascii	"WriteI2CByte\000"
 1858      65493243 
 1858      42797465 
 1858      00
 1859              	.LASF36:
 1860 000d 6D796461 		.ascii	"mydata\000"
 1860      746100
 1861              	.LASF53:
 1862 0014 74656D70 		.ascii	"temp\000"
 1862      00
 1863              	.LASF2:
 1864 0019 73686F72 		.ascii	"short int\000"
 1864      7420696E 
 1864      7400
 1865              	.LASF22:
 1866 0023 73697A65 		.ascii	"sizetype\000"
 1866      74797065 
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 40


 1866      00
 1867              	.LASF50:
 1868 002c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1868      43313120 
 1868      352E342E 
 1868      31203230 
 1868      31363036 
 1869 005f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1869      20726576 
 1869      6973696F 
 1869      6E203233 
 1869      37373135 
 1870 0092 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1870      66756E63 
 1870      74696F6E 
 1870      2D736563 
 1870      74696F6E 
 1871              	.LASF38:
 1872 00ba 6D61696E 		.ascii	"main\000"
 1872      00
 1873              	.LASF7:
 1874 00bf 5F5F7569 		.ascii	"__uint32_t\000"
 1874      6E743332 
 1874      5F7400
 1875              	.LASF12:
 1876 00ca 75696E74 		.ascii	"uint8_t\000"
 1876      385F7400 
 1877              	.LASF37:
 1878 00d2 44656C61 		.ascii	"Delay_xms\000"
 1878      795F786D 
 1878      7300
 1879              	.LASF43:
 1880 00dc 61766572 		.ascii	"averageVolts\000"
 1880      61676556 
 1880      6F6C7473 
 1880      00
 1881              	.LASF15:
 1882 00e9 75696E74 		.ascii	"uint8\000"
 1882      3800
 1883              	.LASF18:
 1884 00ef 666C6F61 		.ascii	"float\000"
 1884      7400
 1885              	.LASF9:
 1886 00f5 6C6F6E67 		.ascii	"long long int\000"
 1886      206C6F6E 
 1886      6720696E 
 1886      7400
 1887              	.LASF39:
 1888 0103 766F6C74 		.ascii	"voltCount\000"
 1888      436F756E 
 1888      7400
 1889              	.LASF6:
 1890 010d 6C6F6E67 		.ascii	"long int\000"
 1890      20696E74 
 1890      00
 1891              	.LASF32:
 1892 0116 61646472 		.ascii	"addr\000"
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 41


 1892      00
 1893              	.LASF30:
 1894 011b 52656164 		.ascii	"ReadI2CByte\000"
 1894      49324342 
 1894      79746500 
 1895              	.LASF44:
 1896 0127 64697370 		.ascii	"displayStr\000"
 1896      6C617953 
 1896      747200
 1897              	.LASF4:
 1898 0132 5F5F7569 		.ascii	"__uint8_t\000"
 1898      6E74385F 
 1898      7400
 1899              	.LASF24:
 1900 013c 4932435F 		.ascii	"I2C_Stop\000"
 1900      53746F70 
 1900      00
 1901              	.LASF40:
 1902 0145 6D566F6C 		.ascii	"mVolts\000"
 1902      747300
 1903              	.LASF21:
 1904 014c 6C6F6E67 		.ascii	"long double\000"
 1904      20646F75 
 1904      626C6500 
 1905              	.LASF1:
 1906 0158 756E7369 		.ascii	"unsigned char\000"
 1906      676E6564 
 1906      20636861 
 1906      7200
 1907              	.LASF0:
 1908 0166 7369676E 		.ascii	"signed char\000"
 1908      65642063 
 1908      68617200 
 1909              	.LASF10:
 1910 0172 6C6F6E67 		.ascii	"long long unsigned int\000"
 1910      206C6F6E 
 1910      6720756E 
 1910      7369676E 
 1910      65642069 
 1911              	.LASF14:
 1912 0189 75696E74 		.ascii	"uint32_t\000"
 1912      33325F74 
 1912      00
 1913              	.LASF11:
 1914 0192 756E7369 		.ascii	"unsigned int\000"
 1914      676E6564 
 1914      20696E74 
 1914      00
 1915              	.LASF8:
 1916 019f 6C6F6E67 		.ascii	"long unsigned int\000"
 1916      20756E73 
 1916      69676E65 
 1916      6420696E 
 1916      7400
 1917              	.LASF49:
 1918 01b1 636F756E 		.ascii	"countPerMin\000"
 1918      74506572 
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 42


 1918      4D696E00 
 1919              	.LASF34:
 1920 01bd 61636B74 		.ascii	"acktemp\000"
 1920      656D7000 
 1921              	.LASF3:
 1922 01c5 73686F72 		.ascii	"short unsigned int\000"
 1922      7420756E 
 1922      7369676E 
 1922      65642069 
 1922      6E7400
 1923              	.LASF48:
 1924 01d8 74656D70 		.ascii	"temp_a5\000"
 1924      5F613500 
 1925              	.LASF35:
 1926 01e0 52656164 		.ascii	"Read_One_Byte\000"
 1926      5F4F6E65 
 1926      5F427974 
 1926      6500
 1927              	.LASF42:
 1928 01ee 766F6C74 		.ascii	"voltSamples\000"
 1928      53616D70 
 1928      6C657300 
 1929              	.LASF31:
 1930 01fa 57726974 		.ascii	"Write_One_Byte\000"
 1930      655F4F6E 
 1930      655F4279 
 1930      746500
 1931              	.LASF20:
 1932 0209 63686172 		.ascii	"char\000"
 1932      00
 1933              	.LASF13:
 1934 020e 696E7433 		.ascii	"int32_t\000"
 1934      325F7400 
 1935              	.LASF27:
 1936 0216 44454C41 		.ascii	"DELAY\000"
 1936      5900
 1937              	.LASF33:
 1938 021c 74686564 		.ascii	"thedata\000"
 1938      61746100 
 1939              	.LASF52:
 1940 0224 433A5C55 		.ascii	"C:\\Users\\shkoli\\Documents\\PSoC Creator\\CE22279"
 1940      73657273 
 1940      5C73686B 
 1940      6F6C695C 
 1940      446F6375 
 1941 0252 335F4D6F 		.ascii	"3_MotionSensor_RTOS\\CE218138_BLE_Thermometer_RTOS\\"
 1941      74696F6E 
 1941      53656E73 
 1941      6F725F52 
 1941      544F535C 
 1942 0284 61646370 		.ascii	"adcpsoc5\\voltageDisplay_SAR_ADC\\VoltageDisplay_SA"
 1942      736F6335 
 1942      5C766F6C 
 1942      74616765 
 1942      44697370 
 1943 02b5 525F4144 		.ascii	"R_ADC.cydsn\000"
 1943      432E6379 
ARM GAS  C:\Users\shkoli\AppData\Local\Temp\cclAWaDk.s 			page 43


 1943      64736E00 
 1944              	.LASF16:
 1945 02c1 75696E74 		.ascii	"uint32\000"
 1945      333200
 1946              	.LASF51:
 1947 02c8 6D61696E 		.ascii	"main.c\000"
 1947      2E6300
 1948              	.LASF17:
 1949 02cf 696E7433 		.ascii	"int32\000"
 1949      3200
 1950              	.LASF19:
 1951 02d5 646F7562 		.ascii	"double\000"
 1951      6C6500
 1952              	.LASF26:
 1953 02dc 53454E44 		.ascii	"SEND_1\000"
 1953      5F3100
 1954              	.LASF5:
 1955 02e3 5F5F696E 		.ascii	"__int32_t\000"
 1955      7433325F 
 1955      7400
 1956              	.LASF25:
 1957 02ed 53454E44 		.ascii	"SEND_0\000"
 1957      5F3000
 1958              	.LASF45:
 1959 02f4 79616C69 		.ascii	"yali1\000"
 1959      3100
 1960              	.LASF46:
 1961 02fa 79616C69 		.ascii	"yali2\000"
 1961      3200
 1962              	.LASF47:
 1963 0300 79616C69 		.ascii	"yali3\000"
 1963      3300
 1964              	.LASF41:
 1965 0306 73616D70 		.ascii	"sampleCount\000"
 1965      6C65436F 
 1965      756E7400 
 1966              	.LASF54:
 1967 0312 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1967      52784275 
 1967      66666572 
 1967      00
 1968              	.LASF23:
 1969 031f 4932435F 		.ascii	"I2C_Start\000"
 1969      53746172 
 1969      7400
 1970              	.LASF29:
 1971 0329 43686563 		.ascii	"Check_Acknowledge\000"
 1971      6B5F4163 
 1971      6B6E6F77 
 1971      6C656467 
 1971      6500
 1972              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
